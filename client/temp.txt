Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:40:57 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 ZletzqXz7ctJN1issawDWpgjINLNGT7l 1 12 8 29260 29315Recieved job from server n=12 n0=8 algo_id=1 lowId=29260 hightId=29315
Running algorithm "redelemeier-3d-line-convex"...
8	45
9	329
10	2272
11	15089
12	97492
This took 1.15583 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:40:58 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 yaZw9hjjS4nYCxWHjEBvrGogcpxb8KL5 1 12 8 29370 29425Recieved job from server n=12 n0=8 algo_id=1 lowId=29370 hightId=29425
Running algorithm "redelemeier-3d-line-convex"...
8	51
9	319
10	1994
11	12419
12	76920
This took 0.857133 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:00 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 EW932evLMU69eZh5aeixLvVXWwa9njA6 1 12 8 29425 29480Recieved job from server n=12 n0=8 algo_id=1 lowId=29425 hightId=29480
Running algorithm "redelemeier-3d-line-convex"...
8	51
9	309
10	1853
11	11082
12	66220
This took 0.816035 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:02 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 bN3VZMFCoghHz0vYF2WMhqp1kuytyDCZ 1 12 8 29535 29590Recieved job from server n=12 n0=8 algo_id=1 lowId=29535 hightId=29590
Running algorithm "redelemeier-3d-line-convex"...
8	50
9	279
10	1617
11	9565
12	57207
This took 0.720809 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:03 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 mU2ZMPGMZ3jZq3cCi1QowD6LF4eUC3TO 1 12 8 29645 29700Recieved job from server n=12 n0=8 algo_id=1 lowId=29645 hightId=29700
Running algorithm "redelemeier-3d-line-convex"...
8	42
9	252
10	1510
11	9015
12	53654
This took 0.847945 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:04 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 gTvYHZDZMNyQe3R24kNtpopd1TWxdCty 1 12 8 29700 29755Recieved job from server n=12 n0=8 algo_id=1 lowId=29700 hightId=29755
Running algorithm "redelemeier-3d-line-convex"...
8	48
9	290
10	1744
11	10446
12	62297
This took 0.888696 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:06 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 i1uoTtcjvKc1fU7lQ9krtltixShuzk1C 1 12 8 29810 29865Recieved job from server n=12 n0=8 algo_id=1 lowId=29810 hightId=29865
Running algorithm "redelemeier-3d-line-convex"...
8	34
9	220
10	1411
11	8955
12	56212
This took 0.802872 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:07 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 hlj2dcWLmJ84ETc8LVZ4dOzgVO66QXxW 1 12 8 29920 29975Recieved job from server n=12 n0=8 algo_id=1 lowId=29920 hightId=29975
Running algorithm "redelemeier-3d-line-convex"...
8	45
9	433
10	3536
11	26132
12	181254
This took 2.84463 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:11 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 MF3DeuIqLzby0ZOe7arWrqRK7eqNJ0dM 1 12 8 30030 30085Recieved job from server n=12 n0=8 algo_id=1 lowId=30030 hightId=30085
Running algorithm "redelemeier-3d-line-convex"...
8	45
9	349
10	2375
11	15149
12	93167
This took 1.17492 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:13 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 ajXqp6sPNCZgqMp1qpyd3RypBCezuf66 1 12 8 30140 30195Recieved job from server n=12 n0=8 algo_id=1 lowId=30140 hightId=30195
Running algorithm "redelemeier-3d-line-convex"...
8	36
9	307
10	2268
11	15476
12	100702
This took 1.6664 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:16 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 SCW3ZqiDS4HGvRe77N9kEWfTf2PHoSW0 1 12 8 30195 30250Recieved job from server n=12 n0=8 algo_id=1 lowId=30195 hightId=30250
Running algorithm "redelemeier-3d-line-convex"...
8	43
9	290
10	1787
11	10559
12	61179
This took 0.989376 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:17 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 lCxP0nH9F1CLgRUdovL1IbZzq1HVW5TO 1 12 8 30305 30360Recieved job from server n=12 n0=8 algo_id=1 lowId=30305 hightId=30360
Running algorithm "redelemeier-3d-line-convex"...
8	36
9	306
10	2254
11	15369
12	100171
This took 1.48924 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:20 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 JTVMR2blFisGhYgNhw67OuWbvVPB1hXn 1 12 8 30360 30415Recieved job from server n=12 n0=8 algo_id=1 lowId=30360 hightId=30415
Running algorithm "redelemeier-3d-line-convex"...
8	43
9	275
10	1625
11	9298
12	52508
This took 0.849802 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:22 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 S7pa1yvJi1Fq9Pbi6CJtRz7C3g48kaWP 1 12 8 30415 30470Recieved job from server n=12 n0=8 algo_id=1 lowId=30415 hightId=30470
Running algorithm "redelemeier-3d-line-convex"...
8	9
9	37
10	171
11	843
12	4362
This took 1.49532 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:24 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 bAk0RV9TGzx3JUwiPfGBjruhzy2gUO8W 1 12 8 30470 30525Recieved job from server n=12 n0=8 algo_id=1 lowId=30470 hightId=30525
Running algorithm "redelemeier-3d-line-convex"...
This took 0.889622 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:26 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 s1PiH1U9gSyoCE1lEAbsVMOixwlKNDox 1 12 8 30525 30580Recieved job from server n=12 n0=8 algo_id=1 lowId=30525 hightId=30580
Running algorithm "redelemeier-3d-line-convex"...
8	34
9	283
10	2005
11	13104
12	81806
This took 1.23997 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:28 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 ppzAvwLokjdDBozipLFX6HMGC2R8XCkR 1 12 8 30580 30635Recieved job from server n=12 n0=8 algo_id=1 lowId=30580 hightId=30635
Running algorithm "redelemeier-3d-line-convex"...
8	53
9	318
10	1856
11	10682
12	61200
This took 0.843549 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:29 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 erGlGujx9aHD7BXGxZJjKmSqjIYkOvIa 1 12 8 30635 30690Recieved job from server n=12 n0=8 algo_id=1 lowId=30635 hightId=30690
Running algorithm "redelemeier-3d-line-convex"...
8	53
9	438
10	3105
11	20369
12	127863
This took 1.51721 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:31 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 pJjx0MMF3Z8E83Ps9KvmDfAypsWliRAK 1 12 8 30690 30745Recieved job from server n=12 n0=8 algo_id=1 lowId=30690 hightId=30745
Running algorithm "redelemeier-3d-line-convex"...
8	51
9	323
10	1989
11	12024
12	71775
This took 1.36511 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:33 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 mSHHnlaD4R1k4LQIGPhqJ1QOkV2xZVnm 1 12 8 30745 30800Recieved job from server n=12 n0=8 algo_id=1 lowId=30745 hightId=30800
Running algorithm "redelemeier-3d-line-convex"...
8	53
9	325
10	1896
11	10847
12	61745
This took 0.902967 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:34 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 6s2PgBjcfkFDGZY3G373FnHIF7kMOD7q 1 12 8 30800 30855Recieved job from server n=12 n0=8 algo_id=1 lowId=30800 hightId=30855
Running algorithm "redelemeier-3d-line-convex"...
8	51
9	352
10	2274
11	14177
12	86605
This took 1.09162 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:36 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 oWEr12M9dpcZkWCKEiMt7T5GHgkZop7d 1 12 8 30855 30910Recieved job from server n=12 n0=8 algo_id=1 lowId=30855 hightId=30910
Running algorithm "redelemeier-3d-line-convex"...
8	52
9	327
10	1981
11	11805
12	69806
This took 0.86141 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:37 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 Mu5Rdl0BqEGNaI3Gr8pXMixrfwWKxQMs 1 12 8 30910 30965Recieved job from server n=12 n0=8 algo_id=1 lowId=30910 hightId=30965
Running algorithm "redelemeier-3d-line-convex"...
8	52
9	287
10	1588
11	8898
12	50607
This took 0.698615 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:38 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 5QPM6yZBt2TvMsgQZxnqZErnRfkmsbwu 1 12 8 30965 31020Recieved job from server n=12 n0=8 algo_id=1 lowId=30965 hightId=31020
Running algorithm "redelemeier-3d-line-convex"...
8	43
9	239
10	1372
11	7988
12	46835
This took 0.858964 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:39 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 kQnfONXsZJZzx7emL9sJvt3boFupVqOP 1 12 8 31020 31075Recieved job from server n=12 n0=8 algo_id=1 lowId=31020 hightId=31075
Running algorithm "redelemeier-3d-line-convex"...
8	53
9	278
10	1495
11	8257
12	46629
This took 0.645144 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:40 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 rEjQxYAb2VrM8rGGSzpX81f4VeuHNmko 1 12 8 31075 31130Recieved job from server n=12 n0=8 algo_id=1 lowId=31075 hightId=31130
Running algorithm "redelemeier-3d-line-convex"...
8	52
9	491
10	4003
11	29571
12	204560
This took 2.15385 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:43 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 MdpaneTrG9NtMQbDaM7MSzHNeRDrw2rl 1 12 8 31130 31185Recieved job from server n=12 n0=8 algo_id=1 lowId=31130 hightId=31185
Running algorithm "redelemeier-3d-line-convex"...
8	54
9	420
10	2860
11	18129
12	110364
This took 1.29365 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:44 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 STKlX5igkN94YzSNVwTGRNFCQaotvZQA 1 12 8 31185 31240Recieved job from server n=12 n0=8 algo_id=1 lowId=31185 hightId=31240
Running algorithm "redelemeier-3d-line-convex"...
8	52
9	350
10	2316
11	15068
12	96270
This took 1.69322 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:47 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 WoPD7cEgeFFxwWlSWEKVDHVO0FKT3V8t 1 12 8 31240 31295Recieved job from server n=12 n0=8 algo_id=1 lowId=31240 hightId=31295
Running algorithm "redelemeier-3d-line-convex"...
8	49
9	432
10	3249
11	22446
12	147408
This took 1.76062 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:49 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 f6HBAMY6LVpsZTDOJyk57AT5jbPuZmvl 1 12 8 31295 31350Recieved job from server n=12 n0=8 algo_id=1 lowId=31295 hightId=31350
Running algorithm "redelemeier-3d-line-convex"...
8	43
9	272
10	1617
11	9341
12	53348
This took 1.36979 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:50 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 g4LB3l9II2fmBvevamsrDA62CsvzIBIC 1 12 8 31350 31405Recieved job from server n=12 n0=8 algo_id=1 lowId=31350 hightId=31405
Running algorithm "redelemeier-3d-line-convex"...
8	54
9	483
10	3812
11	27731
12	191062
This took 2.49222 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:53 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 F1IQEmdm4MA1PUzn0CH51v7RuJqbRHcY 1 12 8 31405 31460Recieved job from server n=12 n0=8 algo_id=1 lowId=31405 hightId=31460
Running algorithm "redelemeier-3d-line-convex"...
8	53
9	359
10	2199
11	12823
12	73100
This took 0.949333 seconds
Connecting to melon:8000...
HTTP/1.0 200 OK
Date: Sat, 03 Jan 2015 13:41:55 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html; charset=utf-8

1.5 r3pqqksU7VaUonGmsmU0oCPRE4MEQzgZ 1 12 8 31460 31515Recieved job from server n=12 n0=8 algo_id=1 lowId=31460 hightId=31515
Running algorithm "redelemeier-3d-line-convex"...
8	51
9	379
10	2623
11	17188
12	108625
This took 1.50439 seconds
Connecting to melon:8000...
HTTP/1.0 500 INTERNAL SERVER ERROR
Date: Sat, 03 Jan 2015 13:41:57 GMT
Server: WSGIServer/0.1 Python/2.7.6
Vary: Cookie
X-Frame-Options: SAMEORIGIN
Content-Type: text/html


<!DOCTYPE html>
<html lang="en">
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="robots" content="NONE,NOARCHIVE">
  <title>OperationalError at /allocate</title>
  <style type="text/css">
    html * { padding:0; margin:0; }
    body * { padding:10px 20px; }
    body * * { padding:0; }
    body { font:small sans-serif; }
    body>div { border-bottom:1px solid #ddd; }
    h1 { font-weight:normal; }
    h2 { margin-bottom:.8em; }
    h2 span { font-size:80%; color:#666; font-weight:normal; }
    h3 { margin:1em 0 .5em 0; }
    h4 { margin:0 0 .5em 0; font-weight: normal; }
    code, pre { font-size: 100%; white-space: pre-wrap; }
    table { border:1px solid #ccc; border-collapse: collapse; width:100%; background:white; }
    tbody td, tbody th { vertical-align:top; padding:2px 3px; }
    thead th { padding:1px 6px 1px 3px; background:#fefefe; text-align:left; font-weight:normal; font-size:11px; border:1px solid #ddd; }
    tbody th { width:12em; text-align:right; color:#666; padding-right:.5em; }
    table.vars { margin:5px 0 2px 40px; }
    table.vars td, table.req td { font-family:monospace; }
    table td.code { width:100%; }
    table td.code pre { overflow:hidden; }
    table.source th { color:#666; }
    table.source td { font-family:monospace; white-space:pre; border-bottom:1px solid #eee; }
    ul.traceback { list-style-type:none; color: #222; }
    ul.traceback li.frame { padding-bottom:1em; color:#666; }
    ul.traceback li.user { background-color:#e0e0e0; color:#000 }
    div.context { padding:10px 0; overflow:hidden; }
    div.context ol { padding-left:30px; margin:0 10px; list-style-position: inside; }
    div.context ol li { font-family:monospace; white-space:pre; color:#777; cursor:pointer; }
    div.context ol li pre { display:inline; }
    div.context ol.context-line li { color:#505050; background-color:#dfdfdf; }
    div.context ol.context-line li span { position:absolute; right:32px; }
    .user div.context ol.context-line li { background-color:#bbb; color:#000; }
    .user div.context ol li { color:#666; }
    div.commands { margin-left: 40px; }
    div.commands a { color:#555; text-decoration:none; }
    .user div.commands a { color: black; }
    #summary { background: #ffc; }
    #summary h2 { font-weight: normal; color: #666; }
    #explanation { background:#eee; }
    #template, #template-not-exist { background:#f6f6f6; }
    #template-not-exist ul { margin: 0 0 0 20px; }
    #unicode-hint { background:#eee; }
    #traceback { background:#eee; }
    #requestinfo { background:#f6f6f6; padding-left:120px; }
    #summary table { border:none; background:transparent; }
    #requestinfo h2, #requestinfo h3 { position:relative; margin-left:-100px; }
    #requestinfo h3 { margin-bottom:-1em; }
    .error { background: #ffc; }
    .specific { color:#cc3300; font-weight:bold; }
    h2 span.commands { font-size:.7em;}
    span.commands a:link {color:#5E5694;}
    pre.exception_value { font-family: sans-serif; color: #666; font-size: 1.5em; margin: 10px 0 10px 0; }
  </style>
  
  <script type="text/javascript">
  //<!--
    function getElementsByClassName(oElm, strTagName, strClassName){
        // Written by Jonathan Snook, http://www.snook.ca/jon; Add-ons by Robert Nyman, http://www.robertnyman.com
        var arrElements = (strTagName == "*" && document.all)? document.all :
        oElm.getElementsByTagName(strTagName);
        var arrReturnElements = new Array();
        strClassName = strClassName.replace(/\-/g, "\-");
        var oRegExp = new RegExp("(^|\s)" + strClassName + "(\s|$)");
        var oElement;
        for(var i=0; i<arrElements.length; i++){
            oElement = arrElements[i];
            if(oRegExp.test(oElement.className)){
                arrReturnElements.push(oElement);
            }
        }
        return (arrReturnElements)
    }
    function hideAll(elems) {
      for (var e = 0; e < elems.length; e++) {
        elems[e].style.display = 'none';
      }
    }
    window.onload = function() {
      hideAll(getElementsByClassName(document, 'table', 'vars'));
      hideAll(getElementsByClassName(document, 'ol', 'pre-context'));
      hideAll(getElementsByClassName(document, 'ol', 'post-context'));
      hideAll(getElementsByClassName(document, 'div', 'pastebin'));
    }
    function toggle() {
      for (var i = 0; i < arguments.length; i++) {
        var e = document.getElementById(arguments[i]);
        if (e) {
          e.style.display = e.style.display == 'none' ? 'block': 'none';
        }
      }
      return false;
    }
    function varToggle(link, id) {
      toggle('v' + id);
      var s = link.getElementsByTagName('span')[0];
      var uarr = String.fromCharCode(0x25b6);
      var darr = String.fromCharCode(0x25bc);
      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
      return false;
    }
    function switchPastebinFriendly(link) {
      s1 = "Switch to copy-and-paste view";
      s2 = "Switch back to interactive view";
      link.innerHTML = link.innerHTML == s1 ? s2: s1;
      toggle('browserTraceback', 'pastebinTraceback');
      return false;
    }
    //-->
  </script>
  
</head>
<body>
<div id="summary">
  <h1>OperationalError at /allocate</h1>
  <pre class="exception_value">database is locked</pre>
  <table class="meta">

    <tr>
      <th>Request Method:</th>
      <td>GET</td>
    </tr>
    <tr>
      <th>Request URL:</th>
      <td>http://melon/allocate</td>
    </tr>

    <tr>
      <th>Django Version:</th>
      <td>1.7.1</td>
    </tr>

    <tr>
      <th>Exception Type:</th>
      <td>OperationalError</td>
    </tr>


    <tr>
      <th>Exception Value:</th>
      <td><pre>database is locked</pre></td>
    </tr>


    <tr>
      <th>Exception Location:</th>
      <td>/usr/local/lib/python2.7/dist-packages/django/db/backends/sqlite3/base.py in execute, line 485</td>
    </tr>

    <tr>
      <th>Python Executable:</th>
      <td>/usr/bin/python</td>
    </tr>
    <tr>
      <th>Python Version:</th>
      <td>2.7.6</td>
    </tr>
    <tr>
      <th>Python Path:</th>
      <td><pre>[&#39;/home/artium/Projects/Redelemier/counting_site&#39;,
 &#39;/usr/local/lib/python2.7/dist-packages/Unidecode-0.04.9-py2.7.egg&#39;,
 &#39;/usr/local/lib/python2.7/dist-packages/textile-2.1.4-py2.7.egg&#39;,
 &#39;/usr/local/lib/python2.7/dist-packages/pytz-2012d-py2.7.egg&#39;,
 &#39;/usr/local/lib/python2.7/dist-packages/docutils-0.9.1-py2.7.egg&#39;,
 &#39;/usr/local/lib/python2.7/dist-packages/Jinja2-2.6-py2.7.egg&#39;,
 &#39;/usr/local/lib/python2.7/dist-packages/Paste-1.7.5.1-py2.7.egg&#39;,
 &#39;/usr/local/lib/python2.7/dist-packages/Blogofile-0.8b1-py2.7.egg&#39;,
 &#39;/usr/lib/python2.7/dist-packages&#39;,
 &#39;/usr/local/lib/python2.7/dist-packages/blogofile_blog-0.8b1-py2.7.egg&#39;,
 &#39;/usr/lib/python2.7&#39;,
 &#39;/usr/lib/python2.7/plat-i386-linux-gnu&#39;,
 &#39;/usr/lib/python2.7/lib-tk&#39;,
 &#39;/usr/lib/python2.7/lib-old&#39;,
 &#39;/usr/lib/python2.7/lib-dynload&#39;,
 &#39;/home/artium/.local/lib/python2.7/site-packages&#39;,
 &#39;/usr/local/lib/python2.7/dist-packages&#39;,
 &#39;/usr/lib/python2.7/dist-packages/PILcompat&#39;,
 &#39;/usr/lib/python2.7/dist-packages/gst-0.10&#39;,
 &#39;/usr/lib/python2.7/dist-packages/gtk-2.0&#39;,
 &#39;/usr/lib/pymodules/python2.7&#39;,
 &#39;/usr/lib/python2.7/dist-packages/ubuntu-sso-client&#39;,
 &#39;/usr/lib/python2.7/dist-packages/wx-2.8-gtk2-unicode&#39;]</pre></td>
    </tr>
    <tr>
      <th>Server time:</th>
      <td>Sat, 3 Jan 2015 15:41:57 +0200</td>
    </tr>
  </table>
</div>




<div id="traceback">
  <h2>Traceback <span class="commands"><a href="#" onclick="return switchPastebinFriendly(this);">Switch to copy-and-paste view</a></span></h2>
  
  <div id="browserTraceback">
    <ul class="traceback">
      
        <li class="frame django">
          <code>/usr/local/lib/python2.7/dist-packages/django/core/handlers/base.py</code> in <code>get_response</code>

          
            <div class="context" id="c3023440268">
              
                <ol start="104" class="pre-context" id="pre3023440268"><li onclick="toggle('pre3023440268', 'post3023440268')"><pre>                    response = middleware_method(request, callback, callback_args, callback_kwargs)</pre></li><li onclick="toggle('pre3023440268', 'post3023440268')"><pre>                    if response:</pre></li><li onclick="toggle('pre3023440268', 'post3023440268')"><pre>                        break</pre></li><li onclick="toggle('pre3023440268', 'post3023440268')"><pre></pre></li><li onclick="toggle('pre3023440268', 'post3023440268')"><pre>            if response is None:</pre></li><li onclick="toggle('pre3023440268', 'post3023440268')"><pre>                wrapped_callback = self.make_view_atomic(callback)</pre></li><li onclick="toggle('pre3023440268', 'post3023440268')"><pre>                try:</pre></li></ol>
              
              <ol start="111" class="context-line"><li onclick="toggle('pre3023440268', 'post3023440268')"><pre>                    response = wrapped_callback(request, *callback_args, **callback_kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='112' class="post-context" id="post3023440268"><li onclick="toggle('pre3023440268', 'post3023440268')"><pre>                except Exception as e:</pre></li><li onclick="toggle('pre3023440268', 'post3023440268')"><pre>                    # If the view raised an exception, run it through exception</pre></li><li onclick="toggle('pre3023440268', 'post3023440268')"><pre>                    # middleware, and if the exception middleware returns a</pre></li><li onclick="toggle('pre3023440268', 'post3023440268')"><pre>                    # response, use that. Otherwise, reraise the exception.</pre></li><li onclick="toggle('pre3023440268', 'post3023440268')"><pre>                    for middleware_method in self._exception_middleware:</pre></li><li onclick="toggle('pre3023440268', 'post3023440268')"><pre>                        response = middleware_method(request, e)</pre></li></ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '3023440268')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v3023440268">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>e</td>
                    <td class="code"><pre>OperationalError(&#39;database is locked&#39;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_args</td>
                    <td class="code"><pre>()</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver_match</td>
                    <td class="code"><pre>ResolverMatch(func=&lt;function allocate at 0xb5bb5ae4&gt;, args=(), kwargs={}, url_name=&#39;allocate&#39;, app_name=&#39;None&#39;, namespace=&#39;&#39;)</pre></td>
                  </tr>
                
                  <tr>
                    <td>middleware_method</td>
                    <td class="code"><pre>&lt;bound method CsrfViewMiddleware.process_view of &lt;django.middleware.csrf.CsrfViewMiddleware object at 0xb5d3dcac&gt;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.core.handlers.wsgi.WSGIHandler object at 0xb68ceeec&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&quot;&lt;WSGIRequest\npath:/allocate,\nGET:&lt;QueryDict: {}&gt;,\nPOST:&lt;QueryDict: {}&gt;,\nCOOKIES:{},\nMETA:{&#39;AMDAPPSDKROOT&#39;: &#39;/opt/AMDAPP&#39;,\n &#39;CLUTTER_IM_MODULE&#39;: &#39;xim&#39;,\n &#39;COMPIZ_CONFIG_PROFILE&#39;: &#39;ubuntu&#39;,\n &#39;CONTENT_LENGTH&#39;: &#39;&#39;,\n &#39;CONTENT_TYPE&#39;: &#39;text/plain&#39;,\n u&#39;CSRF_COOKIE&#39;: u&#39;CdT2WeSqUpbff80Mr9Vj39EHseuvmlIS&#39;,\n &#39;DBUS_SESSION_BUS_ADDRESS&#39;: &#39;unix:abstract=/tmp/dbus-yUrpshmuMR&#39;,\n &#39;DEFAULTS_PATH&#39;: &#39;/usr/share/gconf/ubuntu.default.path&#39;,\n &#39;DESKTOP_SESSION&#39;: &#39;ubuntu&#39;,\n &#39;DISPLAY&#39;: &#39;:0&#39;,\n &#39;DJANGO_SETTINGS_MODULE&#39;: &#39;counting_site.settings&#39;,\n &#39;GATEWAY_INTERFACE&#39;: &#39;CGI/1.1&#39;,\n &#39;GDMSESSION&#39;: &#39;ubuntu&#39;,\n &#39;GDM_LANG&#39;: &#39;en_US&#39;,\n &#39;GNOME_DESKTOP_SESSION_ID&#39;: &#39;this-is-deprecated&#39;,\n &#39;GNOME_KEYRING_CONTROL&#39;: &#39;/run/user/1000/keyring-hPYKKp&#39;,\n &#39;GNOME_KEYRING_PID&#39;: &#39;7625&#39;,\n &#39;GPG_AGENT_INFO&#39;: &#39;/run/user/1000/keyring-hPYKKp/gpg:0:1&#39;,\n &#39;GTK_IM_MODULE&#39;: &#39;ibus&#39;,\n &#39;GTK_MODULES&#39;: &#39;overlay-scrollbar:unity-gtk-module&#39;,\n &#39;HOME&#39;: &#39;/home/artium&#39;,\n &#39;HTTP_HOST&#39;: &#39;melon&#39;,\n &#39;IM_CONFIG_PHASE&#39;: &#39;1&#39;,\n &#39;INSTANCE&#39;: &#39;&#39;,\n &#39;JOB&#39;: &#39;dbus&#39;,\n &#39;LANG&#39;: &#39;en_US.UTF-8&#39;,\n &#39;LANGUAGE&#39;: &#39;en_US&#39;,\n &#39;LD_LIBRARY_PATH&#39;: &#39;:/opt/AMDAPP/lib/x86&#39;,\n &#39;LESSCLOSE&#39;: &#39;/usr/bin/lesspipe %s %s&#39;,\n &#39;LESSOPEN&#39;: &#39;| /usr/bin/lesspipe %s&#39;,\n &#39;LIBRARY_PATH&#39;: &#39;/usr/lib/i386-linux-gnu:&#39;,\n &#39;LOGNAME&#39;: &#39;artium&#39;,\n &#39;LS_COLORS&#39;: &#39;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:&#39;,\n &#39;MANDATORY_PATH&#39;: &#39;/usr/share/gconf/ubuntu.mandatory.path&#39;,\n &#39;OLDPWD&#39;: &#39;/home/artium/Projects/Redelemier/client&#39;,\n &#39;PATH&#39;: &#39;/usr/gnat/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/artium/android-sdk-linux/platform-tools&#39;,\n &#39;PATH_INFO&#39;: u&#39;/allocate&#39;,\n &#39;PWD&#39;: &#39;/home/artium/Projects/Redelemier/counting_site&#39;,\n &#39;QT4_IM_MODULE&#39;: &#39;xim&#39;,\n &#39;QT_IM_MODULE&#39;: &#39;ibus&#39;,\n &#39;QT_QPA_PLATFORMTHEME&#39;: &#39;appmenu-qt5&#39;,\n &#39;QUERY_STRING&#39;: &#39;&#39;,\n &#39;REMOTE_ADDR&#39;: &#39;192.168.0.101&#39;,\n &#39;REMOTE_HOST&#39;: &#39;&#39;,\n &#39;REQUEST_METHOD&#39;: &#39;GET&#39;,\n &#39;RUN_MAIN&#39;: &#39;true&#39;,\n &#39;SCRIPT_NAME&#39;: u&#39;&#39;,\n &#39;SELINUX_INIT&#39;: &#39;YES&#39;,\n &#39;SERVER_NAME&#39;: &#39;melon&#39;,\n &#39;SERVER_PORT&#39;: &#39;8000&#39;,\n &#39;SERVER_PROTOCOL&#39;: &#39;HTTP/1.0&#39;,\n &#39;SERVER_SOFTWARE&#39;: &#39;WSGIServer/0.1 Python/2.7.6&#39;,\n &#39;SESSION&#39;: &#39;ubuntu&#39;,\n &#39;SESSIONTYPE&#39;: &#39;gnome-session&#39;,\n &#39;SESSION_MANAGER&#39;: &#39;local/melon:@/tmp/.ICE-unix/7796,unix/melon:/tmp/.ICE-unix/7796&#39;,\n &#39;SHELL&#39;: &#39;/bin/bash&#39;,\n &#39;SHLVL&#39;: &#39;1&#39;,\n &#39;SSH_AUTH_SOCK&#39;: &#39;/run/user/1000/keyring-hPYKKp/ssh&#39;,\n &#39;TERM&#39;: &#39;xterm&#39;,\n &#39;TEXTDOMAIN&#39;: &#39;im-config&#39;,\n &#39;TEXTDOMAINDIR&#39;: &#39;/usr/share/locale/&#39;,\n &#39;TZ&#39;: &#39;Asia/Jerusalem&#39;,\n &#39;UBUNTU_MENUPROXY&#39;: &#39;1&#39;,\n &#39;UPSTART_SESSION&#39;: &#39;unix:abstract=/com/ubuntu/upstart-session/1000/7651&#39;,\n &#39;USER&#39;: &#39;artium&#39;,\n &#39;XAUTHORITY&#39;: &#39;/home/artium/.Xauthority&#39;,\n &#39;XDG_CONFIG_DIRS&#39;: &#39;/etc/xdg/xdg-ubuntu:/usr/share/upstart/xdg:/etc/xdg&#39;,\n &#39;XDG_CURRENT_DESKTOP&#39;: &#39;Unity&#39;,\n &#39;XDG_DATA_DIRS&#39;: &#39;/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/&#39;,\n &#39;XDG_GREETER_DATA_DIR&#39;: &#39;/var/lib/lightdm-data/artium&#39;,\n &#39;XDG_MENU_PREFIX&#39;: &#39;gnome-&#39;,\n &#39;XDG_RUNTIME_DIR&#39;: &#39;/run/user/1000&#39;,\n &#39;XDG_SEAT&#39;: &#39;seat0&#39;,\n &#39;XDG_SEAT_PATH&#39;: &#39;/org/freedesktop/DisplayManager/Seat0&#39;,\n &#39;XDG_SESSION_ID&#39;: &#39;c2&#39;,\n &#39;XDG_SESSION_PATH&#39;: &#39;/org/freedesktop/DisplayManager/Session0&#39;,\n &#39;XDG_VTNR&#39;: &#39;7&#39;,\n &#39;XMODIFIERS&#39;: &#39;@im=ibus&#39;,\n &#39;_&#39;: &#39;/usr/bin/python&#39;,\n &#39;wsgi.errors&#39;: &lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0xb74c60d0&gt;,\n &#39;wsgi.file_wrapper&#39;: &lt;class wsgiref.util.FileWrapper at 0xb679589c&gt;,\n &#39;wsgi.input&#39;: &lt;socket._fileobject object at 0xb43cbf2c&gt;,\n &#39;wsgi.multiprocess&#39;: False,\n &#39;wsgi.multithread&#39;: True,\n &#39;wsgi.run_once&#39;: False,\n &#39;wsgi.url_scheme&#39;: &#39;http&#39;,\n &#39;wsgi.version&#39;: (1, 0)}&gt;&quot;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback</td>
                    <td class="code"><pre>&lt;function allocate at 0xb5bb5ae4&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>wrapped_callback</td>
                    <td class="code"><pre>&lt;function allocate at 0xb495b2cc&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>resolver</td>
                    <td class="code"><pre>&lt;RegexURLResolver &#39;counting_site.urls&#39; (None:None) ^/&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>callback_kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
                  <tr>
                    <td>response</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>urlconf</td>
                    <td class="code"><pre>&#39;counting_site.urls&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        <li class="frame django">
          <code>/usr/local/lib/python2.7/dist-packages/django/db/transaction.py</code> in <code>inner</code>

          
            <div class="context" id="c3023440988">
              
                <ol start="387" class="pre-context" id="pre3023440988"><li onclick="toggle('pre3023440988', 'post3023440988')"><pre>                else:</pre></li><li onclick="toggle('pre3023440988', 'post3023440988')"><pre>                    connection.in_atomic_block = False</pre></li><li onclick="toggle('pre3023440988', 'post3023440988')"><pre></pre></li><li onclick="toggle('pre3023440988', 'post3023440988')"><pre>    def __call__(self, func):</pre></li><li onclick="toggle('pre3023440988', 'post3023440988')"><pre>        @wraps(func, assigned=available_attrs(func))</pre></li><li onclick="toggle('pre3023440988', 'post3023440988')"><pre>        def inner(*args, **kwargs):</pre></li><li onclick="toggle('pre3023440988', 'post3023440988')"><pre>            with self:</pre></li></ol>
              
              <ol start="394" class="context-line"><li onclick="toggle('pre3023440988', 'post3023440988')"><pre>                return func(*args, **kwargs)</pre> <span>...</span></li></ol>
              
                <ol start='395' class="post-context" id="post3023440988"><li onclick="toggle('pre3023440988', 'post3023440988')"><pre>        return inner</pre></li><li onclick="toggle('pre3023440988', 'post3023440988')"><pre></pre></li><li onclick="toggle('pre3023440988', 'post3023440988')"><pre></pre></li><li onclick="toggle('pre3023440988', 'post3023440988')"><pre>def atomic(using=None, savepoint=True):</pre></li><li onclick="toggle('pre3023440988', 'post3023440988')"><pre>    # Bare decorator: @atomic -- although the first argument is called</pre></li><li onclick="toggle('pre3023440988', 'post3023440988')"><pre>    # `using`, it&#39;s actually the function being decorated.</pre></li></ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '3023440988')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v3023440988">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.transaction.Atomic object at 0xb47c404c&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>args</td>
                    <td class="code"><pre>(&lt;WSGIRequest
path:/allocate,
GET:&lt;QueryDict: {}&gt;,
POST:&lt;QueryDict: {}&gt;,
COOKIES:{},
META:{&#39;AMDAPPSDKROOT&#39;: &#39;/opt/AMDAPP&#39;,
 &#39;CLUTTER_IM_MODULE&#39;: &#39;xim&#39;,
 &#39;COMPIZ_CONFIG_PROFILE&#39;: &#39;ubuntu&#39;,
 &#39;CONTENT_LENGTH&#39;: &#39;&#39;,
 &#39;CONTENT_TYPE&#39;: &#39;text/plain&#39;,
 u&#39;CSRF_COOKIE&#39;: u&#39;CdT2WeSqUpbff80Mr9Vj39EHseuvmlIS&#39;,
 &#39;DBUS_SESSION_BUS_ADDRESS&#39;: &#39;unix:abstract=/tmp/dbus-yUrpshmuMR&#39;,
 &#39;DEFAULTS_PATH&#39;: &#39;/usr/share/gconf/ubuntu.default.path&#39;,
 &#39;DESKTOP_SESSION&#39;: &#39;ubuntu&#39;,
 &#39;DISPLAY&#39;: &#39;:0&#39;,
 &#39;DJANGO_SETTINGS_MODULE&#39;: &#39;counting_site.settings&#39;,
 &#39;GATEWAY_INTERFACE&#39;: &#39;CGI/1.1&#39;,
 &#39;GDMSESSION&#39;: &#39;ubuntu&#39;,
 &#39;GDM_LANG&#39;: &#39;en_US&#39;,
 &#39;GNOME_DESKTOP_SESSION_ID&#39;: &#39;this-is-deprecated&#39;,
 &#39;GNOME_KEYRING_CONTROL&#39;: &#39;/run/user/1000/keyring-hPYKKp&#39;,
 &#39;GNOME_KEYRING_PID&#39;: &#39;7625&#39;,
 &#39;GPG_AGENT_INFO&#39;: &#39;/run/user/1000/keyring-hPYKKp/gpg:0:1&#39;,
 &#39;GTK_IM_MODULE&#39;: &#39;ibus&#39;,
 &#39;GTK_MODULES&#39;: &#39;overlay-scrollbar:unity-gtk-module&#39;,
 &#39;HOME&#39;: &#39;/home/artium&#39;,
 &#39;HTTP_HOST&#39;: &#39;melon&#39;,
 &#39;IM_CONFIG_PHASE&#39;: &#39;1&#39;,
 &#39;INSTANCE&#39;: &#39;&#39;,
 &#39;JOB&#39;: &#39;dbus&#39;,
 &#39;LANG&#39;: &#39;en_US.UTF-8&#39;,
 &#39;LANGUAGE&#39;: &#39;en_US&#39;,
 &#39;LD_LIBRARY_PATH&#39;: &#39;:/opt/AMDAPP/lib/x86&#39;,
 &#39;LESSCLOSE&#39;: &#39;/usr/bin/lesspipe %s %s&#39;,
 &#39;LESSOPEN&#39;: &#39;| /usr/bin/lesspipe %s&#39;,
 &#39;LIBRARY_PATH&#39;: &#39;/usr/lib/i386-linux-gnu:&#39;,
 &#39;LOGNAME&#39;: &#39;artium&#39;,
 &#39;LS_COLORS&#39;: &#39;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:&#39;,
 &#39;MANDATORY_PATH&#39;: &#39;/usr/share/gconf/ubuntu.mandatory.path&#39;,
 &#39;OLDPWD&#39;: &#39;/home/artium/Projects/Redelemier/client&#39;,
 &#39;PATH&#39;: &#39;/usr/gnat/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/artium/android-sdk-linux/platform-tools&#39;,
 &#39;PATH_INFO&#39;: u&#39;/allocate&#39;,
 &#39;PWD&#39;: &#39;/home/artium/Projects/Redelemier/counting_site&#39;,
 &#39;QT4_IM_MODULE&#39;: &#39;xim&#39;,
 &#39;QT_IM_MODULE&#39;: &#39;ibus&#39;,
 &#39;QT_QPA_PLATFORMTHEME&#39;: &#39;appmenu-qt5&#39;,
 &#39;QUERY_STRING&#39;: &#39;&#39;,
 &#39;REMOTE_ADDR&#39;: &#39;192.168.0.101&#39;,
 &#39;REMOTE_HOST&#39;: &#39;&#39;,
 &#39;REQUEST_METHOD&#39;: &#39;GET&#39;,
 &#39;RUN_MAIN&#39;: &#39;true&#39;,
 &#39;SCRIPT_NAME&#39;: u&#39;&#39;,
 &#39;SELINUX_INIT&#39;: &#39;YES&#39;,
 &#39;SERVER_NAME&#39;: &#39;melon&#39;,
 &#39;SERVER_PORT&#39;: &#39;8000&#39;,
 &#39;SERVER_PROTOCOL&#39;: &#39;HTTP/1.0&#39;,
 &#39;SERVER_SOFTWARE&#39;: &#39;WSGIServer/0.1 Python/2.7.6&#39;,
 &#39;SESSION&#39;: &#39;ubuntu&#39;,
 &#39;SESSIONTYPE&#39;: &#39;gnome-session&#39;,
 &#39;SESSION_MANAGER&#39;: &#39;local/melon:@/tmp/.ICE-unix/7796,unix/melon:/tmp/.ICE-unix/7796&#39;,
 &#39;SHELL&#39;: &#39;/bin/bash&#39;,
 &#39;SHLVL&#39;: &#39;1&#39;,
 &#39;SSH_AUTH_SOCK&#39;: &#39;/run/user/1000/keyring-hPYKKp/ssh&#39;,
 &#39;TERM&#39;: &#39;xterm&#39;,
 &#39;TEXTDOMAIN&#39;: &#39;im-config&#39;,
 &#39;TEXTDOMAINDIR&#39;: &#39;/usr/share/locale/&#39;,
 &#39;TZ&#39;: &#39;Asia/Jerusalem&#39;,
 &#39;UBUNTU_MENUPROXY&#39;: &#39;1&#39;,
 &#39;UPSTART_SESSION&#39;: &#39;unix:abstract=/com/ubuntu/upstart-session/1000/7651&#39;,
 &#39;USER&#39;: &#39;artium&#39;,
 &#39;XAUTHORITY&#39;: &#39;/home/artium/.Xauthority&#39;,
 &#39;XDG_CONFIG_DIRS&#39;: &#39;/etc/xdg/xdg-ubuntu:/usr/share/upstart/xdg:/etc/xdg&#39;,
 &#39;XDG_CURRENT_DESKTOP&#39;: &#39;Unity&#39;,
 &#39;XDG_DATA_DIRS&#39;: &#39;/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/&#39;,
 &#39;XDG_GREETER_DATA_DIR&#39;: &#39;/var/lib/lightdm-data/artium&#39;,
 &#39;XDG_MENU_PREFIX&#39;: &#39;gnome-&#39;,
 &#39;XDG_RUNTIME_DIR&#39;: &#39;/run/user/1000&#39;,
 &#39;XDG_SEAT&#39;: &#39;seat0&#39;,
 &#39;XDG_SEAT_PATH&#39;: &#39;/org/freedesktop/DisplayManager/Seat0&#39;,
 &#39;XDG_SESSION_ID&#39;: &#39;c2&#39;,
 &#39;XDG_SESSION_PATH&#39;: &#39;/org/freedesktop/DisplayManager/Session0&#39;,
 &#39;XDG_VTNR&#39;: &#39;7&#39;,
 &#39;XMODIFIERS&#39;: &#39;@im=ibus&#39;,
 &#39;_&#39;: &#39;/usr/bin/python&#39;,
 &#39;wsgi.errors&#39;: &lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0xb74c60d0&gt;,
 &#39;wsgi.file_wrapper&#39;: &lt;class wsgiref.util.FileWrapper at 0xb679589c&gt;,
 &#39;wsgi.input&#39;: &lt;socket._fileobject object at 0xb43cbf2c&gt;,
 &#39;wsgi.multiprocess&#39;: False,
 &#39;wsgi.multithread&#39;: True,
 &#39;wsgi.run_once&#39;: False,
 &#39;wsgi.url_scheme&#39;: &#39;http&#39;,
 &#39;wsgi.version&#39;: (1, 0)}&gt;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>func</td>
                    <td class="code"><pre>&lt;function allocate at 0xb5bb5ae4&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>kwargs</td>
                    <td class="code"><pre>{}</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        <li class="frame user">
          <code>/home/artium/Projects/Redelemier/counting_site/counting_app/views.py</code> in <code>allocate</code>

          
            <div class="context" id="c3023441188">
              
                <ol start="39" class="pre-context" id="pre3023441188"><li onclick="toggle('pre3023441188', 'post3023441188')"><pre></pre></li><li onclick="toggle('pre3023441188', 'post3023441188')"><pre>  if j.date_allocated != None and (datetime.today() - j.date_allocated).min &lt; timedelta(minutes=j.config.minutes_before_realloc):</pre></li><li onclick="toggle('pre3023441188', 'post3023441188')"><pre>    return HttpResponse(&quot;0 0 0 0 0 0 0&quot;)</pre></li><li onclick="toggle('pre3023441188', 'post3023441188')"><pre></pre></li><li onclick="toggle('pre3023441188', 'post3023441188')"><pre>  j.secret_hash     = gen_random_word(j.config.secret_hash_length)</pre></li><li onclick="toggle('pre3023441188', 'post3023441188')"><pre>  j.ip_allocated    = request.META[&#39;REMOTE_ADDR&#39;]</pre></li><li onclick="toggle('pre3023441188', 'post3023441188')"><pre>  j.date_allocated  = datetime.today()</pre></li></ol>
              
              <ol start="46" class="context-line"><li onclick="toggle('pre3023441188', 'post3023441188')"><pre>  j.save()</pre> <span>...</span></li></ol>
              
                <ol start='47' class="post-context" id="post3023441188"><li onclick="toggle('pre3023441188', 'post3023441188')"><pre></pre></li><li onclick="toggle('pre3023441188', 'post3023441188')"><pre>  return HttpResponse(&quot;%s %s %s %d %d %d %d&quot; % (j.config.client_version, j.secret_hash, j.config.algo_id, j.config.n, j.config.n0, j.low_id, j.high_id))</pre></li><li onclick="toggle('pre3023441188', 'post3023441188')"><pre>  </pre></li><li onclick="toggle('pre3023441188', 'post3023441188')"><pre>def report(request):</pre></li><li onclick="toggle('pre3023441188', 'post3023441188')"><pre>  j = Job.objects.filter(secret_hash  = request.GET.get(&#39;secret&#39;, None), </pre></li><li onclick="toggle('pre3023441188', 'post3023441188')"><pre>                         ip_allocated = request.META[&#39;REMOTE_ADDR&#39;]).first()</pre></li></ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '3023441188')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v3023441188">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>c</td>
                    <td class="code"><pre>&lt;Config: 12 8 v1.5-1&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>j</td>
                    <td class="code"><pre>&lt;Job: 12 8 [31515..31570]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>request</td>
                    <td class="code"><pre>&quot;&lt;WSGIRequest\npath:/allocate,\nGET:&lt;QueryDict: {}&gt;,\nPOST:&lt;QueryDict: {}&gt;,\nCOOKIES:{},\nMETA:{&#39;AMDAPPSDKROOT&#39;: &#39;/opt/AMDAPP&#39;,\n &#39;CLUTTER_IM_MODULE&#39;: &#39;xim&#39;,\n &#39;COMPIZ_CONFIG_PROFILE&#39;: &#39;ubuntu&#39;,\n &#39;CONTENT_LENGTH&#39;: &#39;&#39;,\n &#39;CONTENT_TYPE&#39;: &#39;text/plain&#39;,\n u&#39;CSRF_COOKIE&#39;: u&#39;CdT2WeSqUpbff80Mr9Vj39EHseuvmlIS&#39;,\n &#39;DBUS_SESSION_BUS_ADDRESS&#39;: &#39;unix:abstract=/tmp/dbus-yUrpshmuMR&#39;,\n &#39;DEFAULTS_PATH&#39;: &#39;/usr/share/gconf/ubuntu.default.path&#39;,\n &#39;DESKTOP_SESSION&#39;: &#39;ubuntu&#39;,\n &#39;DISPLAY&#39;: &#39;:0&#39;,\n &#39;DJANGO_SETTINGS_MODULE&#39;: &#39;counting_site.settings&#39;,\n &#39;GATEWAY_INTERFACE&#39;: &#39;CGI/1.1&#39;,\n &#39;GDMSESSION&#39;: &#39;ubuntu&#39;,\n &#39;GDM_LANG&#39;: &#39;en_US&#39;,\n &#39;GNOME_DESKTOP_SESSION_ID&#39;: &#39;this-is-deprecated&#39;,\n &#39;GNOME_KEYRING_CONTROL&#39;: &#39;/run/user/1000/keyring-hPYKKp&#39;,\n &#39;GNOME_KEYRING_PID&#39;: &#39;7625&#39;,\n &#39;GPG_AGENT_INFO&#39;: &#39;/run/user/1000/keyring-hPYKKp/gpg:0:1&#39;,\n &#39;GTK_IM_MODULE&#39;: &#39;ibus&#39;,\n &#39;GTK_MODULES&#39;: &#39;overlay-scrollbar:unity-gtk-module&#39;,\n &#39;HOME&#39;: &#39;/home/artium&#39;,\n &#39;HTTP_HOST&#39;: &#39;melon&#39;,\n &#39;IM_CONFIG_PHASE&#39;: &#39;1&#39;,\n &#39;INSTANCE&#39;: &#39;&#39;,\n &#39;JOB&#39;: &#39;dbus&#39;,\n &#39;LANG&#39;: &#39;en_US.UTF-8&#39;,\n &#39;LANGUAGE&#39;: &#39;en_US&#39;,\n &#39;LD_LIBRARY_PATH&#39;: &#39;:/opt/AMDAPP/lib/x86&#39;,\n &#39;LESSCLOSE&#39;: &#39;/usr/bin/lesspipe %s %s&#39;,\n &#39;LESSOPEN&#39;: &#39;| /usr/bin/lesspipe %s&#39;,\n &#39;LIBRARY_PATH&#39;: &#39;/usr/lib/i386-linux-gnu:&#39;,\n &#39;LOGNAME&#39;: &#39;artium&#39;,\n &#39;LS_COLORS&#39;: &#39;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:&#39;,\n &#39;MANDATORY_PATH&#39;: &#39;/usr/share/gconf/ubuntu.mandatory.path&#39;,\n &#39;OLDPWD&#39;: &#39;/home/artium/Projects/Redelemier/client&#39;,\n &#39;PATH&#39;: &#39;/usr/gnat/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/artium/android-sdk-linux/platform-tools&#39;,\n &#39;PATH_INFO&#39;: u&#39;/allocate&#39;,\n &#39;PWD&#39;: &#39;/home/artium/Projects/Redelemier/counting_site&#39;,\n &#39;QT4_IM_MODULE&#39;: &#39;xim&#39;,\n &#39;QT_IM_MODULE&#39;: &#39;ibus&#39;,\n &#39;QT_QPA_PLATFORMTHEME&#39;: &#39;appmenu-qt5&#39;,\n &#39;QUERY_STRING&#39;: &#39;&#39;,\n &#39;REMOTE_ADDR&#39;: &#39;192.168.0.101&#39;,\n &#39;REMOTE_HOST&#39;: &#39;&#39;,\n &#39;REQUEST_METHOD&#39;: &#39;GET&#39;,\n &#39;RUN_MAIN&#39;: &#39;true&#39;,\n &#39;SCRIPT_NAME&#39;: u&#39;&#39;,\n &#39;SELINUX_INIT&#39;: &#39;YES&#39;,\n &#39;SERVER_NAME&#39;: &#39;melon&#39;,\n &#39;SERVER_PORT&#39;: &#39;8000&#39;,\n &#39;SERVER_PROTOCOL&#39;: &#39;HTTP/1.0&#39;,\n &#39;SERVER_SOFTWARE&#39;: &#39;WSGIServer/0.1 Python/2.7.6&#39;,\n &#39;SESSION&#39;: &#39;ubuntu&#39;,\n &#39;SESSIONTYPE&#39;: &#39;gnome-session&#39;,\n &#39;SESSION_MANAGER&#39;: &#39;local/melon:@/tmp/.ICE-unix/7796,unix/melon:/tmp/.ICE-unix/7796&#39;,\n &#39;SHELL&#39;: &#39;/bin/bash&#39;,\n &#39;SHLVL&#39;: &#39;1&#39;,\n &#39;SSH_AUTH_SOCK&#39;: &#39;/run/user/1000/keyring-hPYKKp/ssh&#39;,\n &#39;TERM&#39;: &#39;xterm&#39;,\n &#39;TEXTDOMAIN&#39;: &#39;im-config&#39;,\n &#39;TEXTDOMAINDIR&#39;: &#39;/usr/share/locale/&#39;,\n &#39;TZ&#39;: &#39;Asia/Jerusalem&#39;,\n &#39;UBUNTU_MENUPROXY&#39;: &#39;1&#39;,\n &#39;UPSTART_SESSION&#39;: &#39;unix:abstract=/com/ubuntu/upstart-session/1000/7651&#39;,\n &#39;USER&#39;: &#39;artium&#39;,\n &#39;XAUTHORITY&#39;: &#39;/home/artium/.Xauthority&#39;,\n &#39;XDG_CONFIG_DIRS&#39;: &#39;/etc/xdg/xdg-ubuntu:/usr/share/upstart/xdg:/etc/xdg&#39;,\n &#39;XDG_CURRENT_DESKTOP&#39;: &#39;Unity&#39;,\n &#39;XDG_DATA_DIRS&#39;: &#39;/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/&#39;,\n &#39;XDG_GREETER_DATA_DIR&#39;: &#39;/var/lib/lightdm-data/artium&#39;,\n &#39;XDG_MENU_PREFIX&#39;: &#39;gnome-&#39;,\n &#39;XDG_RUNTIME_DIR&#39;: &#39;/run/user/1000&#39;,\n &#39;XDG_SEAT&#39;: &#39;seat0&#39;,\n &#39;XDG_SEAT_PATH&#39;: &#39;/org/freedesktop/DisplayManager/Seat0&#39;,\n &#39;XDG_SESSION_ID&#39;: &#39;c2&#39;,\n &#39;XDG_SESSION_PATH&#39;: &#39;/org/freedesktop/DisplayManager/Session0&#39;,\n &#39;XDG_VTNR&#39;: &#39;7&#39;,\n &#39;XMODIFIERS&#39;: &#39;@im=ibus&#39;,\n &#39;_&#39;: &#39;/usr/bin/python&#39;,\n &#39;wsgi.errors&#39;: &lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0xb74c60d0&gt;,\n &#39;wsgi.file_wrapper&#39;: &lt;class wsgiref.util.FileWrapper at 0xb679589c&gt;,\n &#39;wsgi.input&#39;: &lt;socket._fileobject object at 0xb43cbf2c&gt;,\n &#39;wsgi.multiprocess&#39;: False,\n &#39;wsgi.multithread&#39;: True,\n &#39;wsgi.run_once&#39;: False,\n &#39;wsgi.url_scheme&#39;: &#39;http&#39;,\n &#39;wsgi.version&#39;: (1, 0)}&gt;&quot;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        <li class="frame django">
          <code>/usr/local/lib/python2.7/dist-packages/django/db/models/base.py</code> in <code>save</code>

          
            <div class="context" id="c3023441828">
              
                <ol start="584" class="pre-context" id="pre3023441828"><li onclick="toggle('pre3023441828', 'post3023441828')"><pre>            ]</pre></li><li onclick="toggle('pre3023441828', 'post3023441828')"><pre></pre></li><li onclick="toggle('pre3023441828', 'post3023441828')"><pre>            loaded_fields = field_names.difference(deferred_fields)</pre></li><li onclick="toggle('pre3023441828', 'post3023441828')"><pre>            if loaded_fields:</pre></li><li onclick="toggle('pre3023441828', 'post3023441828')"><pre>                update_fields = frozenset(loaded_fields)</pre></li><li onclick="toggle('pre3023441828', 'post3023441828')"><pre></pre></li><li onclick="toggle('pre3023441828', 'post3023441828')"><pre>        self.save_base(using=using, force_insert=force_insert,</pre></li></ol>
              
              <ol start="591" class="context-line"><li onclick="toggle('pre3023441828', 'post3023441828')"><pre>                       force_update=force_update, update_fields=update_fields)</pre> <span>...</span></li></ol>
              
                <ol start='592' class="post-context" id="post3023441828"><li onclick="toggle('pre3023441828', 'post3023441828')"><pre>    save.alters_data = True</pre></li><li onclick="toggle('pre3023441828', 'post3023441828')"><pre></pre></li><li onclick="toggle('pre3023441828', 'post3023441828')"><pre>    def save_base(self, raw=False, force_insert=False,</pre></li><li onclick="toggle('pre3023441828', 'post3023441828')"><pre>                  force_update=False, using=None, update_fields=None):</pre></li><li onclick="toggle('pre3023441828', 'post3023441828')"><pre>        &quot;&quot;&quot;</pre></li><li onclick="toggle('pre3023441828', 'post3023441828')"><pre>        Handles the parts of saving which should be done only once per save,</pre></li></ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '3023441828')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v3023441828">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#39;default&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Job: 12 8 [31515..31570]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        <li class="frame django">
          <code>/usr/local/lib/python2.7/dist-packages/django/db/models/base.py</code> in <code>save_base</code>

          
            <div class="context" id="c3023440468">
              
                <ol start="612" class="pre-context" id="pre3023440468"><li onclick="toggle('pre3023440468', 'post3023440468')"><pre>        meta = cls._meta</pre></li><li onclick="toggle('pre3023440468', 'post3023440468')"><pre>        if not meta.auto_created:</pre></li><li onclick="toggle('pre3023440468', 'post3023440468')"><pre>            signals.pre_save.send(sender=origin, instance=self, raw=raw, using=using,</pre></li><li onclick="toggle('pre3023440468', 'post3023440468')"><pre>                                  update_fields=update_fields)</pre></li><li onclick="toggle('pre3023440468', 'post3023440468')"><pre>        with transaction.commit_on_success_unless_managed(using=using, savepoint=False):</pre></li><li onclick="toggle('pre3023440468', 'post3023440468')"><pre>            if not raw:</pre></li><li onclick="toggle('pre3023440468', 'post3023440468')"><pre>                self._save_parents(cls, using, update_fields)</pre></li></ol>
              
              <ol start="619" class="context-line"><li onclick="toggle('pre3023440468', 'post3023440468')"><pre>            updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)</pre> <span>...</span></li></ol>
              
                <ol start='620' class="post-context" id="post3023440468"><li onclick="toggle('pre3023440468', 'post3023440468')"><pre>        # Store the database on which the object was saved</pre></li><li onclick="toggle('pre3023440468', 'post3023440468')"><pre>        self._state.db = using</pre></li><li onclick="toggle('pre3023440468', 'post3023440468')"><pre>        # Once saved, this is no longer a to-be-added instance.</pre></li><li onclick="toggle('pre3023440468', 'post3023440468')"><pre>        self._state.adding = False</pre></li><li onclick="toggle('pre3023440468', 'post3023440468')"><pre></pre></li><li onclick="toggle('pre3023440468', 'post3023440468')"><pre>        # Signal that the save is complete</pre></li></ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '3023440468')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v3023440468">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>origin</td>
                    <td class="code"><pre>&lt;class &#39;counting_app.models.Job&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Job: 12 8 [31515..31570]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>meta</td>
                    <td class="code"><pre>&lt;Options for Job&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#39;default&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#39;counting_app.models.Job&#39;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        <li class="frame django">
          <code>/usr/local/lib/python2.7/dist-packages/django/db/models/base.py</code> in <code>_save_table</code>

          
            <div class="context" id="c3023438748">
              
                <ol start="674" class="pre-context" id="pre3023438748"><li onclick="toggle('pre3023438748', 'post3023438748')"><pre>        # If possible, try an UPDATE. If that doesn&#39;t update anything, do an INSERT.</pre></li><li onclick="toggle('pre3023438748', 'post3023438748')"><pre>        if pk_set and not force_insert:</pre></li><li onclick="toggle('pre3023438748', 'post3023438748')"><pre>            base_qs = cls._base_manager.using(using)</pre></li><li onclick="toggle('pre3023438748', 'post3023438748')"><pre>            values = [(f, None, (getattr(self, f.attname) if raw else f.pre_save(self, False)))</pre></li><li onclick="toggle('pre3023438748', 'post3023438748')"><pre>                      for f in non_pks]</pre></li><li onclick="toggle('pre3023438748', 'post3023438748')"><pre>            forced_update = update_fields or force_update</pre></li><li onclick="toggle('pre3023438748', 'post3023438748')"><pre>            updated = self._do_update(base_qs, using, pk_val, values, update_fields,</pre></li></ol>
              
              <ol start="681" class="context-line"><li onclick="toggle('pre3023438748', 'post3023438748')"><pre>                                      forced_update)</pre> <span>...</span></li></ol>
              
                <ol start='682' class="post-context" id="post3023438748"><li onclick="toggle('pre3023438748', 'post3023438748')"><pre>            if force_update and not updated:</pre></li><li onclick="toggle('pre3023438748', 'post3023438748')"><pre>                raise DatabaseError(&quot;Forced update did not affect any rows.&quot;)</pre></li><li onclick="toggle('pre3023438748', 'post3023438748')"><pre>            if update_fields and not updated:</pre></li><li onclick="toggle('pre3023438748', 'post3023438748')"><pre>                raise DatabaseError(&quot;Save with update_fields did not affect any rows.&quot;)</pre></li><li onclick="toggle('pre3023438748', 'post3023438748')"><pre>        if not updated:</pre></li><li onclick="toggle('pre3023438748', 'post3023438748')"><pre>            if meta.order_with_respect_to:</pre></li></ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '3023438748')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v3023438748">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>forced_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>non_pks</td>
                    <td class="code"><pre>[&lt;django.db.models.fields.related.ForeignKey: config&gt;,
 &lt;django.db.models.fields.CharField: secret_hash&gt;,
 &lt;django.db.models.fields.IntegerField: low_id&gt;,
 &lt;django.db.models.fields.IntegerField: high_id&gt;,
 &lt;django.db.models.fields.DateTimeField: date_allocated&gt;,
 &lt;django.db.models.fields.DateTimeField: date_reported&gt;,
 &lt;django.db.models.fields.CharField: results&gt;,
 &lt;django.db.models.fields.FloatField: cpu_time&gt;,
 &lt;django.db.models.fields.CharField: ip_allocated&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>updated</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>f</td>
                    <td class="code"><pre>&lt;django.db.models.fields.CharField: ip_allocated&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>base_qs</td>
                    <td class="code"><pre>[&lt;Job: 12 8 [0..55]&gt;, &lt;Job: 12 8 [55..110]&gt;, &lt;Job: 12 8 [110..165]&gt;, &lt;Job: 12 8 [165..220]&gt;, &lt;Job: 12 8 [220..275]&gt;, &lt;Job: 12 8 [275..330]&gt;, &lt;Job: 12 8 [330..385]&gt;, &lt;Job: 12 8 [385..440]&gt;, &lt;Job: 12 8 [440..495]&gt;, &lt;Job: 12 8 [495..550]&gt;, &lt;Job: 12 8 [550..605]&gt;, &lt;Job: 12 8 [605..660]&gt;, &lt;Job: 12 8 [660..715]&gt;, &lt;Job: 12 8 [715..770]&gt;, &lt;Job: 12 8 [770..825]&gt;, &lt;Job: 12 8 [825..880]&gt;, &lt;Job: 12 8 [880..935]&gt;, &lt;Job: 12 8 [935..990]&gt;, &lt;Job: 12 8 [990..1045]&gt;, &lt;Job: 12 8 [1045..1100]&gt;, &#39;...(remaining elements truncated)...&#39;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Job: 12 8 [31515..31570]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>raw</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>meta</td>
                    <td class="code"><pre>&lt;Options for Job&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>values</td>
                    <td class="code"><pre>[(&lt;django.db.models.fields.related.ForeignKey: config&gt;, None, 8),
 (&lt;django.db.models.fields.CharField: secret_hash&gt;,
  None,
  &#39;Ar50BAT77dWI2uuTV5VtETlvz0703qsF&#39;),
 (&lt;django.db.models.fields.IntegerField: low_id&gt;, None, 31515),
 (&lt;django.db.models.fields.IntegerField: high_id&gt;, None, 31570),
 (&lt;django.db.models.fields.DateTimeField: date_allocated&gt;,
  None,
  datetime.datetime(2015, 1, 3, 15, 41, 57, 61624)),
 (&lt;django.db.models.fields.DateTimeField: date_reported&gt;, None, None),
 (&lt;django.db.models.fields.CharField: results&gt;, None, None),
 (&lt;django.db.models.fields.FloatField: cpu_time&gt;, None, 0.0),
 (&lt;django.db.models.fields.CharField: ip_allocated&gt;, None, &#39;192.168.0.101&#39;)]</pre></td>
                  </tr>
                
                  <tr>
                    <td>pk_val</td>
                    <td class="code"><pre>2031</pre></td>
                  </tr>
                
                  <tr>
                    <td>pk_set</td>
                    <td class="code"><pre>True</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#39;default&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>force_insert</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>cls</td>
                    <td class="code"><pre>&lt;class &#39;counting_app.models.Job&#39;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        <li class="frame django">
          <code>/usr/local/lib/python2.7/dist-packages/django/db/models/base.py</code> in <code>_do_update</code>

          
            <div class="context" id="c3023438108">
              
                <ol start="718" class="pre-context" id="pre3023438108"><li onclick="toggle('pre3023438108', 'post3023438108')"><pre>            return update_fields is not None or filtered.exists()</pre></li><li onclick="toggle('pre3023438108', 'post3023438108')"><pre>        if self._meta.select_on_save and not forced_update:</pre></li><li onclick="toggle('pre3023438108', 'post3023438108')"><pre>            if filtered.exists():</pre></li><li onclick="toggle('pre3023438108', 'post3023438108')"><pre>                filtered._update(values)</pre></li><li onclick="toggle('pre3023438108', 'post3023438108')"><pre>                return True</pre></li><li onclick="toggle('pre3023438108', 'post3023438108')"><pre>            else:</pre></li><li onclick="toggle('pre3023438108', 'post3023438108')"><pre>                return False</pre></li></ol>
              
              <ol start="725" class="context-line"><li onclick="toggle('pre3023438108', 'post3023438108')"><pre>        return filtered._update(values) &gt; 0</pre> <span>...</span></li></ol>
              
                <ol start='726' class="post-context" id="post3023438108"><li onclick="toggle('pre3023438108', 'post3023438108')"><pre></pre></li><li onclick="toggle('pre3023438108', 'post3023438108')"><pre>    def _do_insert(self, manager, using, fields, update_pk, raw):</pre></li><li onclick="toggle('pre3023438108', 'post3023438108')"><pre>        &quot;&quot;&quot;</pre></li><li onclick="toggle('pre3023438108', 'post3023438108')"><pre>        Do an INSERT. If update_pk is defined then this method should return</pre></li><li onclick="toggle('pre3023438108', 'post3023438108')"><pre>        the new pk for the model.</pre></li><li onclick="toggle('pre3023438108', 'post3023438108')"><pre>        &quot;&quot;&quot;</pre></li></ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '3023438108')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v3023438108">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>forced_update</td>
                    <td class="code"><pre>False</pre></td>
                  </tr>
                
                  <tr>
                    <td>update_fields</td>
                    <td class="code"><pre>None</pre></td>
                  </tr>
                
                  <tr>
                    <td>base_qs</td>
                    <td class="code"><pre>[&lt;Job: 12 8 [0..55]&gt;, &lt;Job: 12 8 [55..110]&gt;, &lt;Job: 12 8 [110..165]&gt;, &lt;Job: 12 8 [165..220]&gt;, &lt;Job: 12 8 [220..275]&gt;, &lt;Job: 12 8 [275..330]&gt;, &lt;Job: 12 8 [330..385]&gt;, &lt;Job: 12 8 [385..440]&gt;, &lt;Job: 12 8 [440..495]&gt;, &lt;Job: 12 8 [495..550]&gt;, &lt;Job: 12 8 [550..605]&gt;, &lt;Job: 12 8 [605..660]&gt;, &lt;Job: 12 8 [660..715]&gt;, &lt;Job: 12 8 [715..770]&gt;, &lt;Job: 12 8 [770..825]&gt;, &lt;Job: 12 8 [825..880]&gt;, &lt;Job: 12 8 [880..935]&gt;, &lt;Job: 12 8 [935..990]&gt;, &lt;Job: 12 8 [990..1045]&gt;, &lt;Job: 12 8 [1045..1100]&gt;, &#39;...(remaining elements truncated)...&#39;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;Job: 12 8 [31515..31570]&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>values</td>
                    <td class="code"><pre>[(&lt;django.db.models.fields.related.ForeignKey: config&gt;, None, 8),
 (&lt;django.db.models.fields.CharField: secret_hash&gt;,
  None,
  &#39;Ar50BAT77dWI2uuTV5VtETlvz0703qsF&#39;),
 (&lt;django.db.models.fields.IntegerField: low_id&gt;, None, 31515),
 (&lt;django.db.models.fields.IntegerField: high_id&gt;, None, 31570),
 (&lt;django.db.models.fields.DateTimeField: date_allocated&gt;,
  None,
  datetime.datetime(2015, 1, 3, 15, 41, 57, 61624)),
 (&lt;django.db.models.fields.DateTimeField: date_reported&gt;, None, None),
 (&lt;django.db.models.fields.CharField: results&gt;, None, None),
 (&lt;django.db.models.fields.FloatField: cpu_time&gt;, None, 0.0),
 (&lt;django.db.models.fields.CharField: ip_allocated&gt;, None, &#39;192.168.0.101&#39;)]</pre></td>
                  </tr>
                
                  <tr>
                    <td>pk_val</td>
                    <td class="code"><pre>2031</pre></td>
                  </tr>
                
                  <tr>
                    <td>filtered</td>
                    <td class="code"><pre>[&lt;Job: 12 8 [31515..31570]&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>using</td>
                    <td class="code"><pre>&#39;default&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        <li class="frame django">
          <code>/usr/local/lib/python2.7/dist-packages/django/db/models/query.py</code> in <code>_update</code>

          
            <div class="context" id="c3023439988">
              
                <ol start="593" class="pre-context" id="pre3023439988"><li onclick="toggle('pre3023439988', 'post3023439988')"><pre>        useful at that level).</pre></li><li onclick="toggle('pre3023439988', 'post3023439988')"><pre>        &quot;&quot;&quot;</pre></li><li onclick="toggle('pre3023439988', 'post3023439988')"><pre>        assert self.query.can_filter(), \</pre></li><li onclick="toggle('pre3023439988', 'post3023439988')"><pre>            &quot;Cannot update a query once a slice has been taken.&quot;</pre></li><li onclick="toggle('pre3023439988', 'post3023439988')"><pre>        query = self.query.clone(sql.UpdateQuery)</pre></li><li onclick="toggle('pre3023439988', 'post3023439988')"><pre>        query.add_update_fields(values)</pre></li><li onclick="toggle('pre3023439988', 'post3023439988')"><pre>        self._result_cache = None</pre></li></ol>
              
              <ol start="600" class="context-line"><li onclick="toggle('pre3023439988', 'post3023439988')"><pre>        return query.get_compiler(self.db).execute_sql(CURSOR)</pre> <span>...</span></li></ol>
              
                <ol start='601' class="post-context" id="post3023439988"><li onclick="toggle('pre3023439988', 'post3023439988')"><pre>    _update.alters_data = True</pre></li><li onclick="toggle('pre3023439988', 'post3023439988')"><pre>    _update.queryset_only = False</pre></li><li onclick="toggle('pre3023439988', 'post3023439988')"><pre></pre></li><li onclick="toggle('pre3023439988', 'post3023439988')"><pre>    def exists(self):</pre></li><li onclick="toggle('pre3023439988', 'post3023439988')"><pre>        if self._result_cache is None:</pre></li><li onclick="toggle('pre3023439988', 'post3023439988')"><pre>            return self.query.has_results(using=self.db)</pre></li></ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '3023439988')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v3023439988">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>query</td>
                    <td class="code"><pre>&lt;django.db.models.sql.subqueries.UpdateQuery object at 0xb47c4b4c&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>[&lt;Job: 12 8 [31515..31570]&gt;]</pre></td>
                  </tr>
                
                  <tr>
                    <td>values</td>
                    <td class="code"><pre>[(&lt;django.db.models.fields.related.ForeignKey: config&gt;, None, 8),
 (&lt;django.db.models.fields.CharField: secret_hash&gt;,
  None,
  &#39;Ar50BAT77dWI2uuTV5VtETlvz0703qsF&#39;),
 (&lt;django.db.models.fields.IntegerField: low_id&gt;, None, 31515),
 (&lt;django.db.models.fields.IntegerField: high_id&gt;, None, 31570),
 (&lt;django.db.models.fields.DateTimeField: date_allocated&gt;,
  None,
  datetime.datetime(2015, 1, 3, 15, 41, 57, 61624)),
 (&lt;django.db.models.fields.DateTimeField: date_reported&gt;, None, None),
 (&lt;django.db.models.fields.CharField: results&gt;, None, None),
 (&lt;django.db.models.fields.FloatField: cpu_time&gt;, None, 0.0),
 (&lt;django.db.models.fields.CharField: ip_allocated&gt;, None, &#39;192.168.0.101&#39;)]</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        <li class="frame django">
          <code>/usr/local/lib/python2.7/dist-packages/django/db/models/sql/compiler.py</code> in <code>execute_sql</code>

          
            <div class="context" id="c3023438148">
              
                <ol start="997" class="pre-context" id="pre3023438148"><li onclick="toggle('pre3023438148', 'post3023438148')"><pre>    def execute_sql(self, result_type):</pre></li><li onclick="toggle('pre3023438148', 'post3023438148')"><pre>        &quot;&quot;&quot;</pre></li><li onclick="toggle('pre3023438148', 'post3023438148')"><pre>        Execute the specified update. Returns the number of rows affected by</pre></li><li onclick="toggle('pre3023438148', 'post3023438148')"><pre>        the primary update query. The &quot;primary update query&quot; is the first</pre></li><li onclick="toggle('pre3023438148', 'post3023438148')"><pre>        non-empty query that is executed. Row counts for any subsequent,</pre></li><li onclick="toggle('pre3023438148', 'post3023438148')"><pre>        related queries are not available.</pre></li><li onclick="toggle('pre3023438148', 'post3023438148')"><pre>        &quot;&quot;&quot;</pre></li></ol>
              
              <ol start="1004" class="context-line"><li onclick="toggle('pre3023438148', 'post3023438148')"><pre>        cursor = super(SQLUpdateCompiler, self).execute_sql(result_type)</pre> <span>...</span></li></ol>
              
                <ol start='1005' class="post-context" id="post3023438148"><li onclick="toggle('pre3023438148', 'post3023438148')"><pre>        try:</pre></li><li onclick="toggle('pre3023438148', 'post3023438148')"><pre>            rows = cursor.rowcount if cursor else 0</pre></li><li onclick="toggle('pre3023438148', 'post3023438148')"><pre>            is_empty = cursor is None</pre></li><li onclick="toggle('pre3023438148', 'post3023438148')"><pre>        finally:</pre></li><li onclick="toggle('pre3023438148', 'post3023438148')"><pre>            if cursor:</pre></li><li onclick="toggle('pre3023438148', 'post3023438148')"><pre>                cursor.close()</pre></li></ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '3023438148')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v3023438148">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.sql.compiler.SQLUpdateCompiler object at 0xb4947a8c&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>result_type</td>
                    <td class="code"><pre>&#39;cursor&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        <li class="frame django">
          <code>/usr/local/lib/python2.7/dist-packages/django/db/models/sql/compiler.py</code> in <code>execute_sql</code>

          
            <div class="context" id="c3023438228">
              
                <ol start="779" class="pre-context" id="pre3023438228"><li onclick="toggle('pre3023438228', 'post3023438228')"><pre>            if result_type == MULTI:</pre></li><li onclick="toggle('pre3023438228', 'post3023438228')"><pre>                return iter([])</pre></li><li onclick="toggle('pre3023438228', 'post3023438228')"><pre>            else:</pre></li><li onclick="toggle('pre3023438228', 'post3023438228')"><pre>                return</pre></li><li onclick="toggle('pre3023438228', 'post3023438228')"><pre></pre></li><li onclick="toggle('pre3023438228', 'post3023438228')"><pre>        cursor = self.connection.cursor()</pre></li><li onclick="toggle('pre3023438228', 'post3023438228')"><pre>        try:</pre></li></ol>
              
              <ol start="786" class="context-line"><li onclick="toggle('pre3023438228', 'post3023438228')"><pre>            cursor.execute(sql, params)</pre> <span>...</span></li></ol>
              
                <ol start='787' class="post-context" id="post3023438228"><li onclick="toggle('pre3023438228', 'post3023438228')"><pre>        except Exception:</pre></li><li onclick="toggle('pre3023438228', 'post3023438228')"><pre>            cursor.close()</pre></li><li onclick="toggle('pre3023438228', 'post3023438228')"><pre>            raise</pre></li><li onclick="toggle('pre3023438228', 'post3023438228')"><pre></pre></li><li onclick="toggle('pre3023438228', 'post3023438228')"><pre>        if result_type == CURSOR:</pre></li><li onclick="toggle('pre3023438228', 'post3023438228')"><pre>            # Caller didn&#39;t specify a result_type, so just give them back the</pre></li></ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '3023438228')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v3023438228">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>cursor</td>
                    <td class="code"><pre>&lt;django.db.backends.utils.CursorDebugWrapper object at 0xb494756c&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.models.sql.compiler.SQLUpdateCompiler object at 0xb4947a8c&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(8,
 &#39;Ar50BAT77dWI2uuTV5VtETlvz0703qsF&#39;,
 31515,
 31570,
 u&#39;2015-01-03 15:41:57.061624&#39;,
 0.0,
 &#39;192.168.0.101&#39;,
 2031)</pre></td>
                  </tr>
                
                  <tr>
                    <td>result_type</td>
                    <td class="code"><pre>&#39;cursor&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>u&#39;UPDATE &quot;counting_app_job&quot; SET &quot;config_id&quot; = %s, &quot;secret_hash&quot; = %s, &quot;low_id&quot; = %s, &quot;high_id&quot; = %s, &quot;date_allocated&quot; = %s, &quot;date_reported&quot; = NULL, &quot;results&quot; = NULL, &quot;cpu_time&quot; = %s, &quot;ip_allocated&quot; = %s WHERE &quot;counting_app_job&quot;.&quot;id&quot; = %s&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        <li class="frame django">
          <code>/usr/local/lib/python2.7/dist-packages/django/db/backends/utils.py</code> in <code>execute</code>

          
            <div class="context" id="c3023438868">
              
                <ol start="74" class="pre-context" id="pre3023438868"><li onclick="toggle('pre3023438868', 'post3023438868')"><pre>class CursorDebugWrapper(CursorWrapper):</pre></li><li onclick="toggle('pre3023438868', 'post3023438868')"><pre></pre></li><li onclick="toggle('pre3023438868', 'post3023438868')"><pre>    # XXX callproc isn&#39;t instrumented at this time.</pre></li><li onclick="toggle('pre3023438868', 'post3023438868')"><pre></pre></li><li onclick="toggle('pre3023438868', 'post3023438868')"><pre>    def execute(self, sql, params=None):</pre></li><li onclick="toggle('pre3023438868', 'post3023438868')"><pre>        start = time()</pre></li><li onclick="toggle('pre3023438868', 'post3023438868')"><pre>        try:</pre></li></ol>
              
              <ol start="81" class="context-line"><li onclick="toggle('pre3023438868', 'post3023438868')"><pre>            return super(CursorDebugWrapper, self).execute(sql, params)</pre> <span>...</span></li></ol>
              
                <ol start='82' class="post-context" id="post3023438868"><li onclick="toggle('pre3023438868', 'post3023438868')"><pre>        finally:</pre></li><li onclick="toggle('pre3023438868', 'post3023438868')"><pre>            stop = time()</pre></li><li onclick="toggle('pre3023438868', 'post3023438868')"><pre>            duration = stop - start</pre></li><li onclick="toggle('pre3023438868', 'post3023438868')"><pre>            sql = self.db.ops.last_executed_query(self.cursor, sql, params)</pre></li><li onclick="toggle('pre3023438868', 'post3023438868')"><pre>            self.db.queries.append({</pre></li><li onclick="toggle('pre3023438868', 'post3023438868')"><pre>                &#39;sql&#39;: sql,</pre></li></ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '3023438868')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v3023438868">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.utils.CursorDebugWrapper object at 0xb494756c&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>stop</td>
                    <td class="code"><pre>1420292517.062863</pre></td>
                  </tr>
                
                  <tr>
                    <td>start</td>
                    <td class="code"><pre>1420292517.062596</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(8,
 &#39;Ar50BAT77dWI2uuTV5VtETlvz0703qsF&#39;,
 31515,
 31570,
 u&#39;2015-01-03 15:41:57.061624&#39;,
 0.0,
 &#39;192.168.0.101&#39;,
 2031)</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>u&#39;QUERY = u\&#39;UPDATE &quot;counting_app_job&quot; SET &quot;config_id&quot; = %s, &quot;secret_hash&quot; = %s, &quot;low_id&quot; = %s, &quot;high_id&quot; = %s, &quot;date_allocated&quot; = %s, &quot;date_reported&quot; = NULL, &quot;results&quot; = NULL, &quot;cpu_time&quot; = %s, &quot;ip_allocated&quot; = %s WHERE &quot;counting_app_job&quot;.&quot;id&quot; = %s\&#39; - PARAMS = (8, u\&#39;Ar50BAT77dWI2uuTV5VtETlvz0703qsF\&#39;, 31515, 31570, u\&#39;2015-01-03 15:41:57.061624\&#39;, 0.0, u\&#39;192.168.0.101\&#39;, 2031)&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>duration</td>
                    <td class="code"><pre>0.00026702880859375</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        <li class="frame django">
          <code>/usr/local/lib/python2.7/dist-packages/django/db/backends/utils.py</code> in <code>execute</code>

          
            <div class="context" id="c3023438708">
              
                <ol start="58" class="pre-context" id="pre3023438708"><li onclick="toggle('pre3023438708', 'post3023438708')"><pre>    def execute(self, sql, params=None):</pre></li><li onclick="toggle('pre3023438708', 'post3023438708')"><pre>        self.db.validate_no_broken_transaction()</pre></li><li onclick="toggle('pre3023438708', 'post3023438708')"><pre>        self.db.set_dirty()</pre></li><li onclick="toggle('pre3023438708', 'post3023438708')"><pre>        with self.db.wrap_database_errors:</pre></li><li onclick="toggle('pre3023438708', 'post3023438708')"><pre>            if params is None:</pre></li><li onclick="toggle('pre3023438708', 'post3023438708')"><pre>                return self.cursor.execute(sql)</pre></li><li onclick="toggle('pre3023438708', 'post3023438708')"><pre>            else:</pre></li></ol>
              
              <ol start="65" class="context-line"><li onclick="toggle('pre3023438708', 'post3023438708')"><pre>                return self.cursor.execute(sql, params)</pre> <span>...</span></li></ol>
              
                <ol start='66' class="post-context" id="post3023438708"><li onclick="toggle('pre3023438708', 'post3023438708')"><pre></pre></li><li onclick="toggle('pre3023438708', 'post3023438708')"><pre>    def executemany(self, sql, param_list):</pre></li><li onclick="toggle('pre3023438708', 'post3023438708')"><pre>        self.db.validate_no_broken_transaction()</pre></li><li onclick="toggle('pre3023438708', 'post3023438708')"><pre>        self.db.set_dirty()</pre></li><li onclick="toggle('pre3023438708', 'post3023438708')"><pre>        with self.db.wrap_database_errors:</pre></li><li onclick="toggle('pre3023438708', 'post3023438708')"><pre>            return self.cursor.executemany(sql, param_list)</pre></li></ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '3023438708')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v3023438708">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.utils.CursorDebugWrapper object at 0xb494756c&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(8,
 &#39;Ar50BAT77dWI2uuTV5VtETlvz0703qsF&#39;,
 31515,
 31570,
 u&#39;2015-01-03 15:41:57.061624&#39;,
 0.0,
 &#39;192.168.0.101&#39;,
 2031)</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>u&#39;UPDATE &quot;counting_app_job&quot; SET &quot;config_id&quot; = %s, &quot;secret_hash&quot; = %s, &quot;low_id&quot; = %s, &quot;high_id&quot; = %s, &quot;date_allocated&quot; = %s, &quot;date_reported&quot; = NULL, &quot;results&quot; = NULL, &quot;cpu_time&quot; = %s, &quot;ip_allocated&quot; = %s WHERE &quot;counting_app_job&quot;.&quot;id&quot; = %s&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        <li class="frame django">
          <code>/usr/local/lib/python2.7/dist-packages/django/db/utils.py</code> in <code>__exit__</code>

          
            <div class="context" id="c3023441068">
              
                <ol start="87" class="pre-context" id="pre3023441068"><li onclick="toggle('pre3023441068', 'post3023441068')"><pre>            if issubclass(exc_type, db_exc_type):</pre></li><li onclick="toggle('pre3023441068', 'post3023441068')"><pre>                dj_exc_value = dj_exc_type(*exc_value.args)</pre></li><li onclick="toggle('pre3023441068', 'post3023441068')"><pre>                dj_exc_value.__cause__ = exc_value</pre></li><li onclick="toggle('pre3023441068', 'post3023441068')"><pre>                # Only set the &#39;errors_occurred&#39; flag for errors that may make</pre></li><li onclick="toggle('pre3023441068', 'post3023441068')"><pre>                # the connection unusable.</pre></li><li onclick="toggle('pre3023441068', 'post3023441068')"><pre>                if dj_exc_type not in (DataError, IntegrityError):</pre></li><li onclick="toggle('pre3023441068', 'post3023441068')"><pre>                    self.wrapper.errors_occurred = True</pre></li></ol>
              
              <ol start="94" class="context-line"><li onclick="toggle('pre3023441068', 'post3023441068')"><pre>                six.reraise(dj_exc_type, dj_exc_value, traceback)</pre> <span>...</span></li></ol>
              
                <ol start='95' class="post-context" id="post3023441068"><li onclick="toggle('pre3023441068', 'post3023441068')"><pre></pre></li><li onclick="toggle('pre3023441068', 'post3023441068')"><pre>    def __call__(self, func):</pre></li><li onclick="toggle('pre3023441068', 'post3023441068')"><pre>        # Note that we are intentionally not using @wraps here for performance</pre></li><li onclick="toggle('pre3023441068', 'post3023441068')"><pre>        # reasons. Refs #21109.</pre></li><li onclick="toggle('pre3023441068', 'post3023441068')"><pre>        def inner(*args, **kwargs):</pre></li><li onclick="toggle('pre3023441068', 'post3023441068')"><pre>            with self:</pre></li></ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '3023441068')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v3023441068">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.utils.DatabaseErrorWrapper object at 0xb49ac66c&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>traceback</td>
                    <td class="code"><pre>&lt;traceback object at 0xb43e50f4&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc_value</td>
                    <td class="code"><pre>OperationalError(&#39;database is locked&#39;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>dj_exc_type</td>
                    <td class="code"><pre>&lt;class &#39;django.db.utils.OperationalError&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>dj_exc_value</td>
                    <td class="code"><pre>OperationalError(&#39;database is locked&#39;,)</pre></td>
                  </tr>
                
                  <tr>
                    <td>exc_type</td>
                    <td class="code"><pre>&lt;class &#39;sqlite3.OperationalError&#39;&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>db_exc_type</td>
                    <td class="code"><pre>&lt;class &#39;sqlite3.OperationalError&#39;&gt;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        <li class="frame django">
          <code>/usr/local/lib/python2.7/dist-packages/django/db/backends/utils.py</code> in <code>execute</code>

          
            <div class="context" id="c3023982836">
              
                <ol start="58" class="pre-context" id="pre3023982836"><li onclick="toggle('pre3023982836', 'post3023982836')"><pre>    def execute(self, sql, params=None):</pre></li><li onclick="toggle('pre3023982836', 'post3023982836')"><pre>        self.db.validate_no_broken_transaction()</pre></li><li onclick="toggle('pre3023982836', 'post3023982836')"><pre>        self.db.set_dirty()</pre></li><li onclick="toggle('pre3023982836', 'post3023982836')"><pre>        with self.db.wrap_database_errors:</pre></li><li onclick="toggle('pre3023982836', 'post3023982836')"><pre>            if params is None:</pre></li><li onclick="toggle('pre3023982836', 'post3023982836')"><pre>                return self.cursor.execute(sql)</pre></li><li onclick="toggle('pre3023982836', 'post3023982836')"><pre>            else:</pre></li></ol>
              
              <ol start="65" class="context-line"><li onclick="toggle('pre3023982836', 'post3023982836')"><pre>                return self.cursor.execute(sql, params)</pre> <span>...</span></li></ol>
              
                <ol start='66' class="post-context" id="post3023982836"><li onclick="toggle('pre3023982836', 'post3023982836')"><pre></pre></li><li onclick="toggle('pre3023982836', 'post3023982836')"><pre>    def executemany(self, sql, param_list):</pre></li><li onclick="toggle('pre3023982836', 'post3023982836')"><pre>        self.db.validate_no_broken_transaction()</pre></li><li onclick="toggle('pre3023982836', 'post3023982836')"><pre>        self.db.set_dirty()</pre></li><li onclick="toggle('pre3023982836', 'post3023982836')"><pre>        with self.db.wrap_database_errors:</pre></li><li onclick="toggle('pre3023982836', 'post3023982836')"><pre>            return self.cursor.executemany(sql, param_list)</pre></li></ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '3023982836')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v3023982836">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.utils.CursorDebugWrapper object at 0xb494756c&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(8,
 &#39;Ar50BAT77dWI2uuTV5VtETlvz0703qsF&#39;,
 31515,
 31570,
 u&#39;2015-01-03 15:41:57.061624&#39;,
 0.0,
 &#39;192.168.0.101&#39;,
 2031)</pre></td>
                  </tr>
                
                  <tr>
                    <td>sql</td>
                    <td class="code"><pre>u&#39;UPDATE &quot;counting_app_job&quot; SET &quot;config_id&quot; = %s, &quot;secret_hash&quot; = %s, &quot;low_id&quot; = %s, &quot;high_id&quot; = %s, &quot;date_allocated&quot; = %s, &quot;date_reported&quot; = NULL, &quot;results&quot; = NULL, &quot;cpu_time&quot; = %s, &quot;ip_allocated&quot; = %s WHERE &quot;counting_app_job&quot;.&quot;id&quot; = %s&#39;</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
        <li class="frame django">
          <code>/usr/local/lib/python2.7/dist-packages/django/db/backends/sqlite3/base.py</code> in <code>execute</code>

          
            <div class="context" id="c3023986516">
              
                <ol start="478" class="pre-context" id="pre3023986516"><li onclick="toggle('pre3023986516', 'post3023986516')"><pre>    This fixes it -- but note that if you want to use a literal &quot;%s&quot; in a query,</pre></li><li onclick="toggle('pre3023986516', 'post3023986516')"><pre>    you&#39;ll need to use &quot;%%s&quot;.</pre></li><li onclick="toggle('pre3023986516', 'post3023986516')"><pre>    &quot;&quot;&quot;</pre></li><li onclick="toggle('pre3023986516', 'post3023986516')"><pre>    def execute(self, query, params=None):</pre></li><li onclick="toggle('pre3023986516', 'post3023986516')"><pre>        if params is None:</pre></li><li onclick="toggle('pre3023986516', 'post3023986516')"><pre>            return Database.Cursor.execute(self, query)</pre></li><li onclick="toggle('pre3023986516', 'post3023986516')"><pre>        query = self.convert_query(query)</pre></li></ol>
              
              <ol start="485" class="context-line"><li onclick="toggle('pre3023986516', 'post3023986516')"><pre>        return Database.Cursor.execute(self, query, params)</pre> <span>...</span></li></ol>
              
                <ol start='486' class="post-context" id="post3023986516"><li onclick="toggle('pre3023986516', 'post3023986516')"><pre></pre></li><li onclick="toggle('pre3023986516', 'post3023986516')"><pre>    def executemany(self, query, param_list):</pre></li><li onclick="toggle('pre3023986516', 'post3023986516')"><pre>        query = self.convert_query(query)</pre></li><li onclick="toggle('pre3023986516', 'post3023986516')"><pre>        return Database.Cursor.executemany(self, query, param_list)</pre></li><li onclick="toggle('pre3023986516', 'post3023986516')"><pre></pre></li><li onclick="toggle('pre3023986516', 'post3023986516')"><pre>    def convert_query(self, query):</pre></li></ol>
              
            </div>
          

          
            <div class="commands">
                
                    <a href="#" onclick="return varToggle(this, '3023986516')"><span>&#x25b6;</span> Local vars</a>
                
            </div>
            <table class="vars" id="v3023986516">
              <thead>
                <tr>
                  <th>Variable</th>
                  <th>Value</th>
                </tr>
              </thead>
              <tbody>
                
                  <tr>
                    <td>query</td>
                    <td class="code"><pre>u&#39;UPDATE &quot;counting_app_job&quot; SET &quot;config_id&quot; = ?, &quot;secret_hash&quot; = ?, &quot;low_id&quot; = ?, &quot;high_id&quot; = ?, &quot;date_allocated&quot; = ?, &quot;date_reported&quot; = NULL, &quot;results&quot; = NULL, &quot;cpu_time&quot; = ?, &quot;ip_allocated&quot; = ? WHERE &quot;counting_app_job&quot;.&quot;id&quot; = ?&#39;</pre></td>
                  </tr>
                
                  <tr>
                    <td>self</td>
                    <td class="code"><pre>&lt;django.db.backends.sqlite3.base.SQLiteCursorWrapper object at 0xb5bb393c&gt;</pre></td>
                  </tr>
                
                  <tr>
                    <td>params</td>
                    <td class="code"><pre>(8,
 &#39;Ar50BAT77dWI2uuTV5VtETlvz0703qsF&#39;,
 31515,
 31570,
 u&#39;2015-01-03 15:41:57.061624&#39;,
 0.0,
 &#39;192.168.0.101&#39;,
 2031)</pre></td>
                  </tr>
                
              </tbody>
            </table>
          
        </li>
      
    </ul>
  </div>
  
  <form action="http://dpaste.com/" name="pasteform" id="pasteform" method="post">

  <div id="pastebinTraceback" class="pastebin">
    <input type="hidden" name="language" value="PythonConsole">
    <input type="hidden" name="title" value="OperationalError at /allocate">
    <input type="hidden" name="source" value="Django Dpaste Agent">
    <input type="hidden" name="poster" value="Django">
    <textarea name="content" id="traceback_area" cols="140" rows="25">
Environment:


Request Method: GET
Request URL: http://melon/allocate

Django Version: 1.7.1
Python Version: 2.7.6
Installed Applications:
(&#39;django.contrib.admin&#39;,
 &#39;django.contrib.auth&#39;,
 &#39;django.contrib.contenttypes&#39;,
 &#39;django.contrib.sessions&#39;,
 &#39;django.contrib.messages&#39;,
 &#39;django.contrib.staticfiles&#39;,
 &#39;counting_app&#39;)
Installed Middleware:
(&#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,
 &#39;django.middleware.common.CommonMiddleware&#39;,
 &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,
 &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,
 &#39;django.contrib.auth.middleware.SessionAuthenticationMiddleware&#39;,
 &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,
 &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;)


Traceback:
File "/usr/local/lib/python2.7/dist-packages/django/core/handlers/base.py" in get_response
  111.                     response = wrapped_callback(request, *callback_args, **callback_kwargs)
File "/usr/local/lib/python2.7/dist-packages/django/db/transaction.py" in inner
  394.                 return func(*args, **kwargs)
File "/home/artium/Projects/Redelemier/counting_site/counting_app/views.py" in allocate
  46.   j.save()
File "/usr/local/lib/python2.7/dist-packages/django/db/models/base.py" in save
  591.                        force_update=force_update, update_fields=update_fields)
File "/usr/local/lib/python2.7/dist-packages/django/db/models/base.py" in save_base
  619.             updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
File "/usr/local/lib/python2.7/dist-packages/django/db/models/base.py" in _save_table
  681.                                       forced_update)
File "/usr/local/lib/python2.7/dist-packages/django/db/models/base.py" in _do_update
  725.         return filtered._update(values) &gt; 0
File "/usr/local/lib/python2.7/dist-packages/django/db/models/query.py" in _update
  600.         return query.get_compiler(self.db).execute_sql(CURSOR)
File "/usr/local/lib/python2.7/dist-packages/django/db/models/sql/compiler.py" in execute_sql
  1004.         cursor = super(SQLUpdateCompiler, self).execute_sql(result_type)
File "/usr/local/lib/python2.7/dist-packages/django/db/models/sql/compiler.py" in execute_sql
  786.             cursor.execute(sql, params)
File "/usr/local/lib/python2.7/dist-packages/django/db/backends/utils.py" in execute
  81.             return super(CursorDebugWrapper, self).execute(sql, params)
File "/usr/local/lib/python2.7/dist-packages/django/db/backends/utils.py" in execute
  65.                 return self.cursor.execute(sql, params)
File "/usr/local/lib/python2.7/dist-packages/django/db/utils.py" in __exit__
  94.                 six.reraise(dj_exc_type, dj_exc_value, traceback)
File "/usr/local/lib/python2.7/dist-packages/django/db/backends/utils.py" in execute
  65.                 return self.cursor.execute(sql, params)
File "/usr/local/lib/python2.7/dist-packages/django/db/backends/sqlite3/base.py" in execute
  485.         return Database.Cursor.execute(self, query, params)

Exception Type: OperationalError at /allocate
Exception Value: database is locked
</textarea>
  <br><br>
  <input type="submit" value="Share this traceback on a public Web site">
  </div>
</form>
</div>



<div id="requestinfo">
  <h2>Request information</h2>


  <h3 id="get-info">GET</h3>
  
    <p>No GET data</p>
  

  <h3 id="post-info">POST</h3>
  
    <p>No POST data</p>
  
  <h3 id="files-info">FILES</h3>
  
    <p>No FILES data</p>
  


  <h3 id="cookie-info">COOKIES</h3>
  
    <p>No cookie data</p>
  

  <h3 id="meta-info">META</h3>
  <table class="req">
    <thead>
      <tr>
        <th>Variable</th>
        <th>Value</th>
      </tr>
    </thead>
    <tbody>
      
        <tr>
          <td>RUN_MAIN</td>
          <td class="code"><pre>&#39;true&#39;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_GREETER_DATA_DIR</td>
          <td class="code"><pre>&#39;/var/lib/lightdm-data/artium&#39;</pre></td>
        </tr>
      
        <tr>
          <td>QT4_IM_MODULE</td>
          <td class="code"><pre>&#39;xim&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_SOFTWARE</td>
          <td class="code"><pre>&#39;WSGIServer/0.1 Python/2.7.6&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SCRIPT_NAME</td>
          <td class="code"><pre>u&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>REQUEST_METHOD</td>
          <td class="code"><pre>&#39;GET&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PROTOCOL</td>
          <td class="code"><pre>&#39;HTTP/1.0&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HOME</td>
          <td class="code"><pre>&#39;/home/artium&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LD_LIBRARY_PATH</td>
          <td class="code"><pre>&#39;:/opt/AMDAPP/lib/x86&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LANG</td>
          <td class="code"><pre>&#39;en_US.UTF-8&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SHELL</td>
          <td class="code"><pre>&#39;/bin/bash&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LIBRARY_PATH</td>
          <td class="code"><pre>&#39;/usr/lib/i386-linux-gnu:&#39;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_DATA_DIRS</td>
          <td class="code"><pre>&#39;/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/&#39;</pre></td>
        </tr>
      
        <tr>
          <td>MANDATORY_PATH</td>
          <td class="code"><pre>&#39;/usr/share/gconf/ubuntu.mandatory.path&#39;</pre></td>
        </tr>
      
        <tr>
          <td>COMPIZ_CONFIG_PROFILE</td>
          <td class="code"><pre>&#39;ubuntu&#39;</pre></td>
        </tr>
      
        <tr>
          <td>JOB</td>
          <td class="code"><pre>&#39;dbus&#39;</pre></td>
        </tr>
      
        <tr>
          <td>TEXTDOMAIN</td>
          <td class="code"><pre>&#39;im-config&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SERVER_PORT</td>
          <td class="code"><pre>&#39;8000&#39;</pre></td>
        </tr>
      
        <tr>
          <td>XMODIFIERS</td>
          <td class="code"><pre>&#39;@im=ibus&#39;</pre></td>
        </tr>
      
        <tr>
          <td>SELINUX_INIT</td>
          <td class="code"><pre>&#39;YES&#39;</pre></td>
        </tr>
      
        <tr>
          <td>PATH_INFO</td>
          <td class="code"><pre>u&#39;/allocate&#39;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_RUNTIME_DIR</td>
          <td class="code"><pre>&#39;/run/user/1000&#39;</pre></td>
        </tr>
      
        <tr>
          <td>HTTP_HOST</td>
          <td class="code"><pre>&#39;melon&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.version</td>
          <td class="code"><pre>(1, 0)</pre></td>
        </tr>
      
        <tr>
          <td>XDG_CURRENT_DESKTOP</td>
          <td class="code"><pre>&#39;Unity&#39;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_SESSION_ID</td>
          <td class="code"><pre>&#39;c2&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DBUS_SESSION_BUS_ADDRESS</td>
          <td class="code"><pre>&#39;unix:abstract=/tmp/dbus-yUrpshmuMR&#39;</pre></td>
        </tr>
      
        <tr>
          <td>GNOME_KEYRING_PID</td>
          <td class="code"><pre>&#39;7625&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DESKTOP_SESSION</td>
          <td class="code"><pre>&#39;ubuntu&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LESSCLOSE</td>
          <td class="code"><pre>&#39;/usr/bin/lesspipe %s %s&#39;</pre></td>
        </tr>
      
        <tr>
          <td>DEFAULTS_PATH</td>
          <td class="code"><pre>&#39;/usr/share/gconf/ubuntu.default.path&#39;</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.run_once</td>
          <td class="code"><pre>False</pre></td>
        </tr>
      
        <tr>
          <td>wsgi.errors</td>
          <td class="code"><pre>&lt;open file &#39;&lt;stderr&gt;&#39;, mode &#39;w&#39; at 0xb74c60d0&gt;</pre></td>
        </tr>
      
        <tr>
          <td>GATEWAY_INTERFACE</td>
          <td class="code"><pre>&#39;CGI/1.1&#39;</pre></td>
        </tr>
      
        <tr>
          <td>INSTANCE</td>
          <td class="code"><pre>&#39;&#39;</pre></td>
        </tr>
      
        <tr>
          <td>XDG_MENU_PREFIX</td>
          <td class="code"><pre>&#39;gnome-&#39;</pre></td>
        </tr>
      
        <tr>
          <td>LS_COLORS</td>
          <td class="code"><pre>&#39;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:&#39;</pre></td>
        </tr>
      
        <tr>
          <td>XVersion mismatch, please download client version 
<!DOCTYPE
