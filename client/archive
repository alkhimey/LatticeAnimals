
BIN_DIR=bin
SRCS=

linux_debug: CXX=g++
linux_debug: FLAGS=-Wall -g
linux_debug: LINKER_AFTER_FLAGS=
linux_debug: OBJ_SUFFIX=obj/debug/linux
linux_debug: EXE_NAME=linux_debug
linux_debug: make_dirs link_exe


make_dirs:
	mkdir -p obj	
	mkdir -p obj/debug
	mkdir -p obj/release
	mkdir -p obj/debug/linux
	mkdir -p obj/release/linux
	mkdir -p obj/debug/win
	mkdir -p obj/release/win
	mkdir -p bin


link_exe: $(addprefix $(OBJ_DIR)/$(DEBUG_DIR)/, $(SRCS:.cpp=_$(WINDOWS_SUFFIX).o))
	$(WINDOWS_CXX)  $(DEBUG_FLAGS) $(COMMON_FLAGS) $^ $(WINDOWS_AFTER_FLAGS) -o $(BIN_DIR)/$(DEBUG_DIR)/$(EXE_PREFIX)_$(WINDOWS_SUFFIX)


$(OBJ_DIR)/%_.o: %.cpp %.h
	$(CXX) -c $(FLAGS) -o $@ $<





LINUX_CXX=g++
WINDOWS_CXX=i586-mingw32msvc-g++

COMMON_FLAGS=-Wall
WINDOWS_AFTER_FLAGS=-lws2_32 # linkage only
DEBUG_FLAGS=-g
RELEASE_FLAGS=-O3 -march=native -DNDEBUG


# Use ':=' instead of '=' to avoid multiple evaluation of NOW.
NOW := $(shell date)

OBJ_DIR=obj
TESTS_DIR=tests # both for input and output
BIN_DIR=bin

RELEASE_DIR=release
DEBUG_DIR=debug

LINUX_SUFFIX=linux
WINDOWS_SUFFIX=windows

EXE_PREFIX=client
TEST_EXE_PREFIX=run_tests

HEADERS=$(wildcard *.h)
SRCS=$(wildcard *.cpp)

TEST_SRCS=$(wildcard $(TESTS_DIR)/*.cpp)

 


.PHONY: clean all

all:





clean:
	rm -rf $(OBJ_DIR) $(BIN_DIR)
